{"version":3,"file":"index.js","sources":["../src/isprimitive.ts","../src/reflect.ts","../src/util.ts","../src/assetbrowser.ts","../node_modules/@masx200/dom-element-attribute-agent-proxy/dist/index.js","../src/dom.ts","../src/attrchange.ts","../node_modules/htm/dist/htm.module.js","../src/merge-entries.ts","../src/reactivestate.ts","../src/virtualdom.ts","../src/createelement.ts","../src/html.ts","../src/toArray.ts","../src/mount.ts","../src/CustomElementRegistry.ts","../src/customelement.ts","../src/isconnected.ts","../src/context-mounted-unmounted-.ts","../src/watch.ts","../src/directives.ts","../src/iscomponent.ts","../src/onevent.ts","../src/rendervdomtoreal.ts","../src/createApp.ts","../node_modules/@masx200/deep-observe-agent-proxy/dist/index.js","../src/handleobjectstate.ts","../src/createstate.ts","../src/cssurlblob.ts","../src/parsecss.ts","../src/readonlyproxy.ts","../src/readysymbol.ts","../src/setimmediate.ts","../src/createComponent.ts","../src/elementonmountandunmount.ts","../src/conditon.ts","../src/computed.ts","../src/createref.ts","../src/extend-directive.ts","../src/input-textarea-value-directive-Bidirectional-binding.ts"],"sourcesContent":["import { isString, isnumber, isboolean, isundefined } from \"./util\";\r\ntype Primitive = string | number | boolean | undefined | bigint;\r\nexport default function(a: any): a is Primitive {\r\n  return (\r\n    isString(a) ||\r\n    isnumber(a) ||\r\n    isboolean(a) ||\r\n    isundefined(a) ||\r\n    typeof a === \"bigint\"\r\n  );\r\n}\r\n","const Reflect = window.Reflect;\r\n// export default Reflect;\r\n\r\nexport const {\r\n  apply,\r\n  construct,\r\n  defineProperty,\r\n  deleteProperty,\r\n  get,\r\n  getOwnPropertyDescriptor,\r\n  getPrototypeOf,\r\n  has,\r\n\r\n  //   isExtensible,\r\n  ownKeys,\r\n  //   preventExtensions,\r\n  set\r\n  //   setPrototypeOf\r\n} = Reflect;\r\n// export {};\r\n/*\r\napply()\r\n对一个函数进行调用操作，同时可以传入一个数组作为调用参数。和 Function.prototype.apply() 功能类似。\r\nconstruct()\r\n对构造函数进行 new 操作，相当于执行 new target(...args)。\r\ndefineProperty()\r\n和 Object.defineProperty() 类似。\r\ndeleteProperty()\r\n作为函数的delete操作符，相当于执行 delete target[name]。\r\n//Reflect.enumerate()\r\n该方法会返回一个包含有目标对象身上所有可枚举的自身字符串属性以及继承字符串属性的迭代器，for...in 操作遍历到的正是这些属性。\r\nget()\r\n获取对象身上某个属性的值，类似于 target[name]。\r\ngetOwnPropertyDescriptor()\r\n类似于 Object.getOwnPropertyDescriptor()。\r\ngetPrototypeOf()\r\n类似于 Object.getPrototypeOf()。\r\nhas()\r\n判断一个对象是否存在某个属性，和 in 运算符 的功能完全相同。\r\nisExtensible()\r\n类似于 Object.isExtensible().\r\nownKeys()\r\n返回一个包含所有自身属性（不包含继承属性）的数组。(类似于 Object.keys(), 但不会受enumerable影响).\r\npreventExtensions()\r\n类似于 Object.preventExtensions()。返回一个Boolean。\r\nset()\r\n将值分配给属性的函数。返回一个Boolean，如果更新成功，则返回true。\r\nsetPrototypeOf()\r\n类似于 Object.setPrototypeOf()。\r\n*/\r\n","export { isplainobject };\r\nexport { isfunction as isFunction, isarray as isArray, isstring as isString };\r\nexport { isprimitive };\r\n\r\nconst isplainobject = (a: any) => isobject(a) && gettagtype(a) === \"object\";\r\n\r\nimport isprimitive from \"./isprimitive\";\r\nimport { /* has,  */ get } from \"./reflect\";\r\nimport { isFunction } from \"./util\";\r\n/* eslint-disable @typescript-eslint/explicit-function-return-type */\r\nexport function isundefined(a: any): a is void {\r\n  return typeof a === \"undefined\" || a === null;\r\n}\r\n\r\nexport function isnumber(a: any): a is number {\r\n  return typeof a === \"number\";\r\n}\r\nexport function isboolean(a: any): a is boolean {\r\n  return typeof a === \"boolean\";\r\n}\r\nexport function isobject(a: any): a is object | Record<string, any> {\r\n  return typeof a === \"object\" && a !== null;\r\n}\r\n// export function isstring(a: string): true;\r\n// export function isstring(a): boolean;\r\nexport function isstring(a: any): a is string {\r\n  return typeof a === \"string\";\r\n}\r\nexport function isfunction(a: any): a is Function {\r\n  return typeof a === \"function\";\r\n}\r\n\r\nexport function isarray(a: any): a is Array<any> {\r\n  return a instanceof Array && Array.isArray(a) && gettagtype(a) === \"array\";\r\n}\r\n/* export function getsymbol(a: string) {\r\n  return Symbol(a);\r\n} */\r\nexport function gettagtype(a: any): string {\r\n  return {}.toString\r\n    .call(a)\r\n    .replace(\"[object \", \"\")\r\n    .replace(\"]\", \"\")\r\n    .toLowerCase()\r\n    .trim();\r\n}\r\nexport function ispromise(a: any): a is Promise<any> {\r\n  return gettagtype(a) === \"promise\" && isFunction(get(a, \"then\"));\r\n}\r\nexport function isSet(a: any): a is Set<any> {\r\n  return gettagtype(a) === \"set\" && a instanceof Set;\r\n}\r\n\r\nconst camelizeRE = /-(\\w)/g;\r\nexport const camelize = (str: string): string => {\r\n  return str.replace(camelizeRE, (_, c) => (c ? c.toUpperCase() : \"\"));\r\n};\r\n\r\nconst hyphenateRE = /\\B([A-Z])/g;\r\nexport const hyphenate = (str: string): string => {\r\n  return str.replace(hyphenateRE, \"-$1\").toLowerCase();\r\n};\r\n","import { isfunction, isobject } from \"./util\";\r\nconst { HTMLElement, customElements, Proxy } = window;\r\nif (\r\n  !isfunction(HTMLElement) ||\r\n  //   typeof HTMLElement !== \"function\" ||\r\n  !isfunction(Proxy) ||\r\n  //   typeof Proxy !== \"function\" ||\r\n  !isobject(customElements)\r\n  /*||\r\n  //   typeof customElements !== \"object\" ||\r\n  !isfunction(window.CustomElementRegistry)\r\n  //||\r\n  //   typeof CustomElementRegistry !== \"function\"\r\n\r\n*/\r\n) {\r\n  console.error(\"Proxy,HTMLElement ,customElements ,browser not supported !\");\r\n  throw new TypeError();\r\n}\r\n","const hyphenateRE = /\\B([A-Z])/g;\r\n\r\nconst hyphenate = str => {\r\n    return str.replace(hyphenateRE, \"-$1\").toLowerCase();\r\n};\r\n\r\nconst String = window.String;\r\n\r\nconst Reflect = window.Reflect;\r\n\r\nconst {get: get, set: set, ownKeys: ownKeys} = Reflect;\r\n\r\nconst valuestring = \"value\";\r\n\r\nfunction isobject(a) {\r\n    return typeof a === \"object\" && a !== null;\r\n}\r\n\r\nfunction isstring(a) {\r\n    return typeof a === \"string\";\r\n}\r\n\r\nfunction isArray(a) {\r\n    return Array.isArray(a);\r\n}\r\n\r\nfunction isSet(a) {\r\n    return a instanceof Set;\r\n}\r\n\r\nconst isinputcheckbox = ele => \"input\" === geteletagname(ele) && get(ele, \"type\") === \"checkbox\";\r\n\r\nfunction objtostylestring(obj) {\r\n    obj = JSON.parse(JSON.stringify(obj));\r\n    obj = Object.fromEntries(Object.entries(obj).map(([key, value]) => [ hyphenate(key).trim(), value ]));\r\n    return Object.entries(obj).map(([key, value]) => key + \":\" + value).join(\";\");\r\n}\r\n\r\nfunction asserthtmlelement(ele) {\r\n    if (!(ele instanceof Element)) {\r\n        console.error(ele);\r\n        console.error(\"invalid HTMLElement!\");\r\n        throw TypeError();\r\n    }\r\n}\r\n\r\nfunction createeleattragentreadwrite(ele) {\r\n    asserthtmlelement(ele);\r\n    var temp = Object.create(null);\r\n    const outputattrs = new Proxy(temp, {\r\n        ownKeys() {\r\n            const isinputtextortextareaflag = isinputtextortextarea(ele);\r\n            const keys = attributesownkeys(ele);\r\n            return Array.from(new Set([ ...keys, isinputcheckbox(ele) ? \"checked\" : undefined, isinputtextortextareaflag ? valuestring : undefined ].flat(Infinity).filter(a => !!a)));\r\n        },\r\n        get(target, key) {\r\n            const isinputtextortextareaflag = isinputtextortextarea(ele);\r\n            if (isinputcheckbox(ele) && key === \"checked\") {\r\n                return get(ele, \"checked\");\r\n            }\r\n            if (isinputtextortextareaflag && key === valuestring) {\r\n                return get(ele, valuestring);\r\n            } else {\r\n                const v = getattribute(ele, String(key));\r\n                if (v === \"\") {\r\n                    return true;\r\n                }\r\n                if (v === null) {\r\n                    return;\r\n                }\r\n                if (isstring(v)) {\r\n                    try {\r\n                        return JSON.parse(String(v));\r\n                    } catch (error) {\r\n                        return v;\r\n                    }\r\n                } else return;\r\n            }\r\n        },\r\n        set(t, key, v) {\r\n            const isinputtextortextareaflag = isinputtextortextarea(ele);\r\n            if (\"function\" === typeof v) {\r\n                console.error(v);\r\n                console.error(\"Setting properties as functions is not allowed\");\r\n                throw TypeError();\r\n            }\r\n            if (geteletagname(ele) === \"input\" && key === \"checked\") {\r\n                set(ele, key, v);\r\n                return true;\r\n            }\r\n            if (isinputtextortextareaflag && key === valuestring) {\r\n                return set(ele, valuestring, v);\r\n            } else if (key === \"style\") {\r\n                const csstext = isstring(v) ? v : isobject(v) ? objtostylestring(v) : String(v);\r\n                set(get(ele, \"style\"), \"cssText\", csstext.trim());\r\n                return true;\r\n            } else if (key === \"class\" && isobject(v)) {\r\n                const classtext = isArray(v) ? v.join(\" \") : isSet(v) ? [ ...v ].join(\" \") : String(v);\r\n                setattribute(ele, String(key), classtext);\r\n            } else {\r\n                if (isSet(v)) {\r\n                    setattribute(ele, String(key), JSON.stringify([ ...v ]));\r\n                } else {\r\n                    if (v === true) {\r\n                        v = \"\";\r\n                    }\r\n                    setattribute(ele, String(key), isobject(v) ? JSON.stringify(v) : String(v));\r\n                    return true;\r\n                }\r\n            }\r\n            return true;\r\n        },\r\n        deleteProperty(t, k) {\r\n            removeAttribute(ele, String(k));\r\n            return true;\r\n        },\r\n        has(target, key) {\r\n            return ownKeys(outputattrs).includes(key);\r\n        },\r\n        defineProperty() {\r\n            return false;\r\n        },\r\n        getOwnPropertyDescriptor(target, key) {\r\n            const otherdescipter = {\r\n                enumerable: true,\r\n                configurable: true,\r\n                writable: true\r\n            };\r\n            const myvalue = get(outputattrs, key);\r\n            if (typeof myvalue !== \"undefined\") {\r\n                return {\r\n                    value: myvalue,\r\n                    ...otherdescipter\r\n                };\r\n            } else {\r\n                return;\r\n            }\r\n        },\r\n        setPrototypeOf() {\r\n            return false;\r\n        }\r\n    });\r\n    return outputattrs;\r\n}\r\n\r\nfunction attributesownkeys(ele) {\r\n    return ele.getAttributeNames();\r\n}\r\n\r\nfunction getattribute(ele, key) {\r\n    return ele.getAttribute(key);\r\n}\r\n\r\nfunction geteletagname(ele) {\r\n    return ele.tagName.toLowerCase();\r\n}\r\n\r\nfunction setattribute(ele, key, value) {\r\n    return ele.setAttribute(key, value);\r\n}\r\n\r\nfunction removeAttribute(ele, key) {\r\n    return ele.removeAttribute(key);\r\n}\r\n\r\nfunction isinputtextortextarea(ele) {\r\n    const tagname = geteletagname(ele);\r\n    return tagname === \"input\" && get(ele, \"type\") === \"text\" || tagname === \"textarea\";\r\n}\r\n\r\nexport default createeleattragentreadwrite;\r\n//# sourceMappingURL=index.js.map\r\n","const document = window.document;\r\n//import { seteletext, setelehtml } from \"./directives\";\r\n//export { seteletext, setelehtml };\r\n\r\nexport function seteletext(e: Element | Node, v: string) {\r\n  e.textContent = v;\r\n}\r\nexport function setelehtml(e: Element, v: string) {\r\n  e.innerHTML = v;\r\n}\r\nexport function appendchild(\r\n  container: HTMLElement | SVGSVGElement | SVGElement | Element | Node,\r\n  ele: HTMLElement | SVGElement | Element | Node\r\n) {\r\n  container.appendChild(ele);\r\n}\r\nexport function createsvgelement() {\r\n  return createElementNS(svgnamespace, \"svg\");\r\n}\r\nexport function createnonescript() {\r\n  return createDocumentFragment();\r\n}\r\nexport function createDocumentFragment() {\r\n  return document.createDocumentFragment();\r\n}\r\nexport function createnativeelement(type: string) {\r\n  return document.createElement(type);\r\n}\r\nexport function createElementNS(namespace: string, name: string) {\r\n  return document.createElementNS(namespace, name);\r\n}\r\nexport function createtextnode(data: string | number) {\r\n  return document.createTextNode(String(data));\r\n}\r\nexport const svgnamespace = \"http://www.w3.org/2000/svg\";\r\nexport function changetext(textnode: Text, value: string) {\r\n  textnode.nodeValue = String(value);\r\n}\r\nexport default document;\r\n\r\nexport const mathnamespace = \"http://www.w3.org/1998/Math/MathML\";\r\n\r\nexport function createmathelement() {\r\n  return createElementNS(mathnamespace, \"math\");\r\n}\r\nexport function createComment() {\r\n  return document.createComment(\"\");\r\n}\r\nexport function removeNode(node: Element) {\r\n  let parentNode = node.parentNode;\r\n  if (parentNode) {\r\n    parentNode.removeChild(node);\r\n  }\r\n}\r\nexport function replaceChild(newChild: Node, oldChild: Node) {\r\n  let parentNode = oldChild.parentNode;\r\n  if (parentNode) {\r\n    parentNode.replaceChild(newChild, oldChild);\r\n  }\r\n}\r\n\r\nexport function domaddlisten(\r\n  ele: Element | Node,\r\n  event: string,\r\n  call: EventListener\r\n) {\r\n  ele.addEventListener(event, call);\r\n}\r\n\r\nexport function domremovelisten(\r\n  ele: Element | Node,\r\n  event: string,\r\n  call: EventListener\r\n) {\r\n  ele.removeEventListener(event, call);\r\n}\r\nexport function getdomchildren(ele: Element | Node) {\r\n  return Array.from(ele.childNodes);\r\n}\r\nexport function getAttribute(ele: Element, name: string) {\r\n  return HTMLElementprototype.getAttribute.call(ele, name);\r\n}\r\nexport function setAttribute(ele: Element, name: string, value: any) {\r\n  HTMLElementprototype.setAttribute.call(ele, name, value);\r\n}\r\nexport function removeAttribute(ele: Element, name: string) {\r\n  HTMLElementprototype.removeAttribute.call(ele, name);\r\n}\r\nconst HTMLElementprototype = HTMLElement.prototype;\r\n\r\nexport function insertfirst(\r\n  container: HTMLElement | Element,\r\n  ele: HTMLElement\r\n) {\r\n  container.insertBefore(ele, container.firstChild);\r\n}\r\nexport function createanotherhtmldocument() {\r\n  return document.implementation.createHTMLDocument(\"\");\r\n}\r\n/* export function getparentNode(ele: Node): Node {\r\n  return ele.parentNode ? ele.parentNode : ele;\r\n}\r\n */\r\n","import { getAttribute, removeAttribute, setAttribute } from \"./dom\";\r\nimport { isFunction } from \"./util\";\r\nimport { get } from \"./reflect\";\r\nconst attributeChangedCallback = \"attributeChangedCallback\";\r\nexport class AttrChange extends HTMLElement {\r\n  constructor() {\r\n    super();\r\n  }\r\n  set textContent(a: string) {\r\n    return;\r\n  }\r\n  set innerHTML(a: string) {\r\n    return;\r\n  }\r\n  set innerText(a: string) {\r\n    return;\r\n  }\r\n  //禁止设置innerhtml，innertext，textcontent\r\n  /* disconnectedCallback() {\r\n  console.log('Custom square element removed from page.');\r\n} */\r\n  /* connectedCallback() {\r\n  console.log('Custom square element added to page.');\r\n  updateStyle(this);\r\n} */\r\n  //\r\n  //   connectedCallback(){}\r\n  /* attributeChangedCallback(name, oldValue, newValue) {\r\n  console.log('Custom square element attributes changed.');\r\n  updateStyle(this);\r\n} */\r\n  setAttribute(qualifiedName: string, value: string) {\r\n    const callback = get(this, attributeChangedCallback);\r\n    const oldValue = getAttribute(this, qualifiedName);\r\n    // super.getAttribute(qualifiedName);\r\n\r\n    if (oldValue !== value) {\r\n      setAttribute(this, qualifiedName, value);\r\n      //   super.setAttribute(qualifiedName, value);\r\n      if (\r\n        isFunction(\r\n          callback\r\n          // this[attributeChangedCallback]\r\n        )\r\n      ) {\r\n        callback.call(this, qualifiedName, oldValue, value);\r\n      }\r\n    }\r\n  }\r\n  removeAttribute(qualifiedName: string) {\r\n    const callback = get(this, attributeChangedCallback);\r\n    const oldValue = getAttribute(this, qualifiedName);\r\n\r\n    if (null !== oldValue) {\r\n      //   super.removeAttribute(qualifiedName);\r\n      removeAttribute(this, qualifiedName);\r\n      if (isFunction(callback)) {\r\n        callback.call(this, qualifiedName, oldValue, undefined);\r\n      }\r\n    }\r\n  }\r\n}\r\n","var n=function(t,r,u,e){for(var p=1;p<r.length;p++){var s=r[p],h=\"number\"==typeof s?u[s]:s,a=r[++p];1===a?e[0]=h:3===a?e[1]=Object.assign(e[1]||{},h):5===a?(e[1]=e[1]||{})[r[++p]]=h:6===a?e[1][r[++p]]+=h+\"\":e.push(a?t.apply(null,n(t,h,u,[\"\",null])):h)}return e},t=function(n){for(var t,r,u=1,e=\"\",p=\"\",s=[0],h=function(n){1===u&&(n||(e=e.replace(/^\\s*\\n\\s*|\\s*\\n\\s*$/g,\"\")))?s.push(n||e,0):3===u&&(n||e)?(s.push(n||e,1),u=2):2===u&&\"...\"===e&&n?s.push(n,3):2===u&&e&&!n?s.push(!0,5,e):u>=5&&((e||!n&&5===u)&&(s.push(e,u,r),u=6),n&&(s.push(n,u,r),u=6)),e=\"\"},a=0;a<n.length;a++){a&&(1===u&&h(),h(a));for(var f=0;f<n[a].length;f++)t=n[a][f],1===u?\"<\"===t?(h(),s=[s],u=3):e+=t:4===u?\"--\"===e&&\">\"===t?(u=1,e=\"\"):e=t+e[0]:p?t===p?p=\"\":e+=t:'\"'===t||\"'\"===t?p=t:\">\"===t?(h(),u=1):u&&(\"=\"===t?(u=5,r=e,e=\"\"):\"/\"===t&&(u<5||\">\"===n[a][f+1])?(h(),3===u&&(s=s[0]),u=s,(s=s[0]).push(u,2),u=0):\" \"===t||\"\\t\"===t||\"\\n\"===t||\"\\r\"===t?(h(),u=2):e+=t),3===u&&\"!--\"===e&&(u=4,s=s[0])}return h(),s},r=\"function\"==typeof Map,u=r?new Map:{},e=r?function(n){var r=u.get(n);return r||u.set(n,r=t(n)),r}:function(n){for(var r=\"\",e=0;e<n.length;e++)r+=n[e].length+\"-\"+n[e];return u[r]||(u[r]=t(n))};export default function(t){var r=n(this,e(t),arguments,[]);return r.length>1?r:r[0]}\n","/* \r\n        \r\n        [[\"value\",[\"f\",\"f\"]],[\"value\",[\"f\",\"f\"]]]\r\n\r\n\r\n        [[\"value\",[\"f\",\"f\",\"f\",\"f\"]]]\r\n        \r\n        */\r\nexport function merge_entries(a: any[] /* Array<[any, Array<any>]> */): any[] {\r\n  const m: { [s: string]: Set<any> } = {};\r\n\r\n  a.forEach(([key, value]) => {\r\n    if (!m[key]) {\r\n      m[key] = new Set();\r\n    }\r\n    // m[key] && (m[key] = new Set());\r\n\r\n    value.forEach((v: any) => {\r\n      m[key].add(v);\r\n    });\r\n  });\r\n  return Object.entries(m).map(([k, v]) => [k, Array.from(v)]);\r\n}\r\n","export const invalid_primitive_or_object_state =\r\n  \"invalid primitive or object state\";\r\nexport function isReactiveState(a: any): a is ReactiveState<any> {\r\n  return a instanceof ReactiveState;\r\n}\r\n// import Reflect from \"./reflect\";\r\nimport isprimitive from \"./isprimitive\";\r\nimport { get } from \"./reflect\";\r\nimport { isobject, isSet } from \"./util\";\r\n// export const textnodesymbol = Symbol(\"textnode\");\r\nexport const changetextnodesymbol = Symbol(\"changetextnode\");\r\nexport const eventtargetsymbol = Symbol(\"eventtatget\");\r\nexport const memlisteners = Symbol(\"memlisteners\");\r\nexport const dispatchsymbol = Symbol(\"dispatch\");\r\nexport const subscribesymbol = Symbol(\"subscribe\");\r\nexport const removeallistenerssymbol = Symbol(\"removeallisteners\");\r\nexport const addallistenerssymbol = Symbol(\"addallisteners\");\r\n/* const forkarryaprototype = {};\r\nownKeys(Array.prototype).forEach(key => {\r\n  forkarryaprototype[key] = Array.prototype[key];\r\n}); */\r\n/* class forkarray {}\r\nObject.assign(forkarray.prototype, forkarryaprototype);\r\nforkarray.prototype.constructor = forkarray;\r\ndeleteProperty(forkarray.prototype, \"length\"); */\r\n/* extends forkarray  */\r\n\r\nexport default class ReactiveState<\r\n  T extends string | number | boolean | undefined | object | bigint\r\n> {\r\n  constructor(init?: T) {\r\n    //super();\r\n    if (isprimitive(init) || isobject(init)) {\r\n      Object.defineProperty(this, \"value\", {\r\n        value: init,\r\n        configurable: true,\r\n        writable: true\r\n      });\r\n\r\n      // this.value = init;\r\n    } else {\r\n      console.error(init);\r\n      console.error(invalid_primitive_or_object_state);\r\n      throw TypeError();\r\n    }\r\n    // this[eventtargetsymbol] = new EventTarget();\r\n\r\n    /*\r\n  //  Object.defineProperty(this, Symbol.toStringTag, {\r\n //     value: \"ReactiveState\",\r\n   //   configurable: true\r\n    //});\r\n\r\n*/\r\n  }\r\n\r\n  /* get [Symbol.toStringTag]() {\r\n  //  return \"ReativeState\";\r\n\r\n} */\r\n\r\n  [addallistenerssymbol]() {\r\n    this[memlisteners].forEach(([value, callback]) => {\r\n      this[eventtargetsymbol].addEventListener(value, callback);\r\n    });\r\n  }\r\n  /*  [changetextnodesymbol](textnode: Text) {\r\n    this[textnodesymbol] = textnode;\r\n  } */\r\n  // [textnodesymbol]: Text | undefined;\r\n  /*  [changetextnodesymbol](textnode: Text) {\r\n      this[textnodesymbol] = textnode;\r\n    } */\r\n  // [textnodesymbol]: Text | undefined;\r\n  value: T | undefined;\r\n  [eventtargetsymbol] = new EventTarget();\r\n  [memlisteners]: Array<[string, EventListener]> = [];\r\n\r\n  //剑头函数绑定this\r\n  valueOf = () => {\r\n    return this.value;\r\n  };\r\n  toString() {\r\n    const value = this.valueOf();\r\n    return isprimitive(value)\r\n      ? String(value)\r\n      : isSet(value)\r\n      ? JSON.stringify([...value])\r\n      : isobject(value)\r\n      ? JSON.stringify(value)\r\n      : \"\";\r\n  }\r\n  [dispatchsymbol](eventname?: string) {\r\n    const name = eventname ? String(eventname) : \"value\";\r\n    //  if (name !== \"value\") {\r\n    //    this[eventtargetsymbol].dispatchEvent(\r\n    //     new CustomEvent(name, { detail: name })\r\n    //  );\r\n    // }\r\n\r\n    this[eventtargetsymbol].dispatchEvent(\r\n      new CustomEvent(\"value\", { detail: name })\r\n    );\r\n  }\r\n  [subscribesymbol](callback: Function /*, eventname?: string*/) {\r\n    // this[eventtargetsymbol].addEventListener(\"value\", callback);\r\n    // const name = eventname ? String(eventname) : \"value\";\r\n    const name = \"value\";\r\n    this[memlisteners].push([\r\n      name,\r\n      (event: Event) => callback.call(undefined, this, get(event, \"detail\"))\r\n    ]);\r\n  } /*  */\r\n  [removeallistenerssymbol]() {\r\n    this[memlisteners].forEach(([value, callback]) => {\r\n      this[eventtargetsymbol].removeEventListener(value, callback);\r\n    });\r\n  }\r\n  [Symbol.toPrimitive]() {\r\n    //return this.value;\r\n    const value = this.valueOf();\r\n    return isprimitive(value)\r\n      ? value\r\n      : isobject(value)\r\n      ? JSON.stringify(value)\r\n      : void 0;\r\n  }\r\n}\r\nReflect.defineProperty(ReactiveState.prototype, Symbol.toStringTag, {\r\n  value: \"ReactiveState\"\r\n});\r\n","import { ElementAttrs } from \"./createelement\";\r\nimport { Class } from \"./customclass\";\r\n// import { Class } from \"./rendervdomtoreal\";\r\nimport { merge_entries } from \"./merge-entries\";\r\nimport ReactiveState, { isReactiveState } from \"./reactivestate\";\r\nimport { defineProperty } from \"./reflect\";\r\nexport function isVirtualdom(a: any): a is Virtualdom<any> {\r\n  return a instanceof Virtualdom;\r\n}\r\n\r\nexport type Vdomchildren = Array<\r\n  Virtualdom<any> | string | ReactiveState<any> | number\r\n>;\r\n\r\nexport default class Virtualdom<T extends Class | string | Function> {\r\n  /* get [Symbol.toStringTag]() {\r\n    return \"VirtualElement\";\r\n  } */\r\n  //   options: any |undefined\r\n  element: undefined | Element | Node;\r\n  type: T | undefined;\r\n  props: ElementAttrs = {};\r\n  children: Vdomchildren = [];\r\n  directives: object = {};\r\n  onevent: { [key: string]: Array<EventListener> } = {};\r\n  bindattr: { [key: string]: ReactiveState<any> } = {};\r\n  constructor(type: T, props: ElementAttrs = {}, children: Vdomchildren = []) {\r\n    //对象浅拷贝\r\n    props = { ...props };\r\n    const 字母大小写 = /[A-Za-z\\u4e00-\\u9fa5]/;\r\n    // console.log(type, props, children);\r\n    //添加支持on开头事件绑定写法\r\n    const propsentries = Object.entries(props);\r\n    /*\r\n.map(([key, value]) => [\r\nkey.startsWith(\"on\")?key.replace(\"on\",\"@\")：key\r\n,\r\nvalue\r\n\r\n]);\r\n*/\r\n    const propsentriesNOTevents = propsentries.filter(\r\n      ([key]) => !(key.startsWith(\"@\") || key.startsWith(\"on\"))\r\n    );\r\n    const 字母开头的entries = propsentriesNOTevents.filter(([key]) =>\r\n      字母大小写.test(key[0])\r\n    );\r\n\r\n    Object.assign(this, {\r\n      type,\r\n      bindattr: Object.fromEntries(\r\n        /*   propsentriesNOTevents\r\n          .filter(([key]) => 字母大小写.test(key[0])) */\r\n        字母开头的entries.filter(\r\n          e => isReactiveState(e[1])\r\n          // e[1] instanceof ReactiveState\r\n        )\r\n      ),\r\n      props: Object.fromEntries(\r\n        /*   propsentriesNOTevents\r\n          .filter(([key]) => 字母大小写.test(key[0])) */\r\n        字母开头的entries.filter(\r\n          e => !isReactiveState(e[1])\r\n          //    e[1] instanceof ReactiveState\r\n        )\r\n      ),\r\n      children: children.flat(1 / 0),\r\n      onevent: Object.fromEntries(\r\n        /* 需要合并entries\r\n        [\r\n        ['value',[f,f]]\r\n        ,\r\n        ['value',[f,f]]\r\n      ]\r\n        合并成\r\n\r\n         [\r\n        ['value',[f,f,f,f]]\r\n         ]\r\n        */\r\n\r\n        /* \r\n        \r\n        [[\"value\",[\"f\",\"f\"]],[\"value\",[\"f\",\"f\"]]]\r\n\r\n\r\n        [[\"value\",[\"f\",\"f\",\"f\",\"f\"]]]\r\n        \r\n        */\r\n        merge_entries([\r\n          ...propsentries\r\n            .filter(([key]) => /\\@/.test(key[0]))\r\n            .map(([key, value]) => [\r\n              //事件名称变成小写\r\n              key\r\n                .slice(1)\r\n                .toLowerCase()\r\n                .trim(),\r\n              //把事件绑定变成事件数组\r\n              [value].flat(1 / 0)\r\n            ]),\r\n          ...propsentries\r\n            .filter(([key]) => key.startsWith(\"on\"))\r\n            .map(([key, value]) => [\r\n              //事件名称变成小写\r\n              key\r\n                .slice(2)\r\n                .toLowerCase()\r\n                .trim(),\r\n              //把事件绑定变成事件数组\r\n              [value].flat(1 / 0)\r\n            ])\r\n        ])\r\n      ),\r\n\r\n      //指令支持以\"*\"开头和\"_\"开头\r\n      directives: Object.fromEntries(\r\n        propsentriesNOTevents\r\n          .filter(([key]) => /\\*/.test(key[0]) || key[0].startsWith(\"_\"))\r\n          .map(([key, value]) => [\r\n            //指令也变成小写\r\n            key\r\n              .slice(1)\r\n              .toLowerCase()\r\n              .trim(),\r\n\r\n            value\r\n          ])\r\n      )\r\n    });\r\n    /* \r\n Object.defineProperty(this, Symbol.toStringTag, {\r\n      value: \"virtualdom\",\r\n      configurable: true\r\n    });\r\n*/\r\n  }\r\n}\r\ndefineProperty(Virtualdom.prototype, Symbol.toStringTag, {\r\n  value: \"VirtualElement\"\r\n});\r\n","import ReactiveState from \"./reactivestate\";\r\nimport { apply } from \"./reflect\";\r\nimport { isarray, isfunction, isplainobject, isstring } from \"./util\";\r\nimport Virtualdom, { Vdomchildren } from \"./virtualdom\";\r\ntype styleprop =\r\n  | string\r\n  | object\r\n  | ReactiveState<string>\r\n  | ReactiveState<object>;\r\n\r\ntype classprop =\r\n  | string\r\n  | Set<string>\r\n  | Array<string>\r\n  | ReactiveState<string | Set<string> | Array<string>>;\r\nexport interface ElementAttrs {\r\n  style?: styleprop;\r\n  class?: classprop;\r\n  [key: string]: any;\r\n}\r\n\r\nexport default function<T extends Function | string>(\r\n  type: T,\r\n  propsorchildren?: Vdomchildren,\r\n  ...children: Vdomchildren\r\n): Virtualdom<T>;\r\nexport default function<T extends Vdomchildren>(\r\n  type: \"\",\r\n  propsorchildren?: T,\r\n  ...children: T\r\n): T;\r\nexport default function<T extends Vdomchildren>(\r\n  type: \"\",\r\n  props?: ElementAttrs,\r\n  ...children: T\r\n): T;\r\nexport default function<T extends Function | string>(\r\n  type: T,\r\n  props?: ElementAttrs,\r\n  ...children: Vdomchildren\r\n): Virtualdom<T>;\r\n//如果第二个参数是数组，则 变成\r\n/* \r\nh(type,...children)\r\nh(type,children)\r\n*/\r\n\r\nexport default function(\r\n  type?: Function | string | \"\",\r\n  propsorchildren?: Vdomchildren | ElementAttrs,\r\n  ...children: Vdomchildren\r\n) {\r\n  if (isarray(propsorchildren)) {\r\n    return apply(createElement, undefined, [\r\n      type,\r\n      undefined,\r\n      [...propsorchildren, ...children].flat(1 / 0)\r\n    ]);\r\n    /*   createElement(\r\n      type,\r\n      undefined,\r\n      [...propsorchildren, ...children].flat(1 / 0)\r\n    ); */\r\n  } else {\r\n    return apply(createElement, undefined, Array.from(arguments)); // createElement(...arguments);\r\n  }\r\n}\r\nfunction createElement<T extends Vdomchildren>(\r\n  type: \"\",\r\n  props?: ElementAttrs,\r\n  ...children: T\r\n): T;\r\nfunction createElement<T extends Function | string>(\r\n  type: T,\r\n  props?: ElementAttrs,\r\n  ...children: Vdomchildren\r\n): Virtualdom<T>;\r\n\r\n/* function createElement<T extends Vdomchildren>(\r\n  type: \"\",\r\n  props?: ElementAttrs,\r\n  ...children: T\r\n): T; */\r\n\r\nfunction createElement<T extends Function | string>(\r\n  type: T,\r\n  props: ElementAttrs = {},\r\n  ...children: Vdomchildren\r\n): Virtualdom<T> | Vdomchildren {\r\n  // | Array<Virtualdom | string>\r\n  // if(isarray()){}\r\n  /* add fragment element */\r\n  //   console.log(type, props, children);\r\n  let typenormalized = isstring(type) || isfunction(type) ? type : \"\";\r\n  const propsnormalized = isplainobject(props) ? props : {};\r\n  const childrennormalized = children\r\n    .flat(Infinity)\r\n    .map(a => (a === 0 ? \"0\" : a))\r\n    .filter(a => !!a);\r\n  if (\r\n    isstring(typenormalized)\r\n    //   typeof typenormalized === \"string\"\r\n  ) {\r\n    typenormalized = typenormalized.trim().toLowerCase();\r\n  }\r\n\r\n  if (\r\n    //typeof typenormalized === \"string\" &&\r\n\r\n    \"\" === typenormalized\r\n  ) {\r\n    return childrennormalized;\r\n  } else {\r\n    /* propsnormalized = Object.fromEntries(\r\n    Object.entries(propsnormalized).map(([key, value]) => [\r\n      key.trim().toLowerCase(),\r\n      value\r\n    ])\r\n  ); */\r\n    return new Virtualdom(\r\n      typenormalized,\r\n      propsnormalized,\r\n      childrennormalized\r\n    ) as Virtualdom<any>;\r\n  }\r\n}\r\n","// declare const htm: (\r\n//   strings?: TemplateStringsArray,\r\n//   ...values: any[]\r\n// ) => Virtualdom<any>;\r\n/* declare module \"htm/dist/htm.module\" {\r\n  const htm: (\r\n    strings?: TemplateStringsArray,\r\n    ...values: any[]\r\n  ) => Virtualdom<any>;\r\n  export default htm;\r\n} */\r\ninterface HTM {\r\n  (strings?: TemplateStringsArray, ...values: any[]): Virtualdom<any>;\r\n}\r\nimport htm from \"htm\";\r\nimport { VaildVDom } from \"./conditon\";\r\n// import htm from \"../types/htm\";\r\nimport { invalid_Virtualdom } from \"./createApp\";\r\nimport h from \"./createelement\";\r\nimport { isReactiveState } from \"./reactivestate\";\r\nimport { isArray, isnumber, isstring } from \"./util\";\r\nimport Virtualdom, { isVirtualdom } from \"./virtualdom\";\r\n\r\n// const html = htm.bind(h);\r\nfunction html(...inargs: any[]): Virtualdom<any> {\r\n  return (htm as HTM).call(h, ...inargs);\r\n}\r\n\r\n/* 如果出现未闭合标签会产生错误的vdom */\r\nexport function isvalidvdom(v: any): v is VaildVDom {\r\n  if (isnumber(v)) {\r\n    return true;\r\n  }\r\n  let flag = false;\r\n  if (isArray(v)) {\r\n    /*flag = v\r\n      .map((ele: any) => {\r\n        return isvalidvdom(ele);\r\n        //isstring(ele) || ele instanceof Virtualdom;\r\n      })\r\n      .includes(false)\r\n      ? false\r\n      : true;\r\n    return flag;*/\r\n    //https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/every\r\n    return v.every(e => isvalidvdom(e));\r\n  } else if (\r\n    isVirtualdom(v)\r\n    // v instanceof Virtualdom\r\n  ) {\r\n    if (isvalidvdom(v.children)) {\r\n      return true;\r\n    }\r\n  } else if (\r\n    isReactiveState(v)\r\n    //  v instanceof ReactiveState\r\n  ) {\r\n    return true;\r\n  } else {\r\n    if (isstring(v)) {\r\n      return true;\r\n    }\r\n  }\r\n  return flag;\r\n}\r\nfunction assertvalidvirtualdom(...args: any[]) {\r\n  const vdom = html(...args);\r\n  if (isvalidvdom(vdom)) {\r\n    return vdom;\r\n  } else {\r\n    console.error(vdom);\r\n    console.error(invalid_Virtualdom);\r\n    throw new TypeError();\r\n  }\r\n}\r\nexport default assertvalidvirtualdom;\r\n","import { isArray, isundefined } from \"./util\";\r\n/* export function toArray<T not Array>(a: T): Array<T>;\r\nexport function toArray<T>(a: Array<T>): Array<T>; */\r\n// export function toArray<T>(a: Array<T>): Array<T>;\r\nexport function toArray(a: any): any[] {\r\n  return (isArray(a) ? a : [a]).flat(1 / 0).filter(a => !isundefined(a));\r\n}\r\n","import { appendchild, /* setelehtml,  */ seteletext } from \"./dom\";\r\nimport { toArray } from \"./toArray\";\r\nexport default function<\r\n  T extends HTMLElement | SVGSVGElement | SVGElement | Element | Node\r\n>(\r\n  ele:\r\n    | Node\r\n    | Array<\r\n        | HTMLElement\r\n        | Text\r\n        | SVGSVGElement\r\n        | DocumentFragment\r\n        | SVGElement\r\n        | Element\r\n        | Node\r\n      >\r\n    | SVGElement\r\n    | DocumentFragment\r\n    | HTMLElement\r\n    | Text\r\n    | SVGSVGElement\r\n    | Element,\r\n  container: T,\r\n  clear: boolean = true\r\n): T {\r\n  if (clear) {\r\n    seteletext(container, \"\");\r\n  }\r\n  //   container.innerHTML = \"\";\r\n  /*  let eles: Array<any>;\r\n  if (Array.isArray(ele)) {\r\n    eles = ele;\r\n  } else {\r\n    // appendchild(container, ele);\r\n    eles = [ele];\r\n  } */\r\n  const eles = toArray(ele).flat(Infinity);\r\n  eles.forEach((e: Node | HTMLElement | Element | SVGElement) =>\r\n    appendchild(container, e)\r\n  );\r\n  return container;\r\n}\r\n","export const invalid_custom_element_class = \"invalid custom element class !\";\r\nimport { isclassextendsHTMLElement } from \"./customelement\";\r\nimport { get, getPrototypeOf, has, set } from \"./reflect\";\r\nimport { isobject } from \"./util\";\r\nif (\r\n  //   typeof Proxy !== \"function\" ||\r\n  !isobject(window.customElements) //||\r\n  //   typeof customElements !== \"object\" ||\r\n\r\n  //||\r\n  //   typeof CustomElementRegistry !== \"function\"\r\n) {\r\n  console.error(\" customElements  not supported !\");\r\n  throw new TypeError();\r\n}\r\n\r\nfunction 使用value从表中查询key(\r\n  表: object,\r\n  组件状态名: any\r\n): string | undefined {\r\n  const outputentrie = Object.entries(表).find(v => {\r\n    return v[1] === 组件状态名;\r\n  });\r\n  return outputentrie ? outputentrie[0] : undefined;\r\n}\r\n\r\ninterface ElementDefinitionOptions {\r\n  extends?: string;\r\n}\r\nwindow.CustomElementRegistry = get(\r\n  getPrototypeOf(window.customElements),\r\n  \"constructor\"\r\n);\r\nconst elementset = Symbol.for(\"elementset\");\r\nconst elementmap = Symbol.for(\"elementmap\");\r\n\r\ninterface CustomElements extends CustomElementRegistry {\r\n  [elementset]: Set<Function>;\r\n  [elementmap]: Record<string, Function>;\r\n}\r\nconst { CustomElementRegistry } = window;\r\nconst customElements = window.customElements as CustomElements;\r\n// export default customElements;\r\n\r\nif (!has(customElements, elementset)) {\r\n  set(customElements, elementset, new Set());\r\n  //   customElements[elementset] = new Set();\r\n}\r\nif (!has(customElements, elementmap)) {\r\n  set(customElements, elementmap, {});\r\n  //   customElements[elementmap] = {};\r\n}\r\nexport default (initclass: Function, extendsname?: string) =>\r\n  RandomDefineCustomElement(initclass, extendsname);\r\n\r\nfunction RandomDefineCustomElement(\r\n  initclass: Function,\r\n  extendsname?: string,\r\n  length = 1\r\n): string | undefined {\r\n  if (!isclassextendsHTMLElement(initclass)) {\r\n    console.error(initclass);\r\n    console.error(invalid_custom_element_class);\r\n    throw TypeError();\r\n  }\r\n\r\n  //如果未注册自定义组件，则用随机名称注册，如果名称重复则重新生成新的随机名\r\n\r\n  if (!get(customElements, elementset).has(initclass)) {\r\n    const elementname = getrandomstringandnumber(length);\r\n\r\n    if (customElements.get(elementname)) {\r\n      return RandomDefineCustomElement(initclass, extendsname, length + 1);\r\n    } else {\r\n      if (extendsname) {\r\n        customElements.define(elementname, initclass, { extends: extendsname });\r\n      } else {\r\n        customElements.define(elementname, initclass);\r\n      }\r\n    }\r\n\r\n    return elementname;\r\n  } else {\r\n    return 使用value从表中查询key(get(customElements, elementmap), initclass);\r\n  }\r\n\r\n  //如果已经注册自定义组件，则返回注册的名称\r\n}\r\n\r\n/* customElements.get = function name(name) {\r\n  return customElements[elementmap].get(name);\r\n};\r\n */\r\ncustomElements.define = function(\r\n  name: string,\r\n  constructor: Function,\r\n  options?: ElementDefinitionOptions\r\n): void {\r\n  if (!isclassextendsHTMLElement(constructor)) {\r\n    console.error(constructor);\r\n    console.error(invalid_custom_element_class);\r\n    throw TypeError();\r\n  }\r\n  if (!get(customElements, elementset).has(constructor)) {\r\n    if (has(customElements[elementmap], name)) {\r\n      /* 防止定义重名 */\r\n      RandomDefineCustomElement(\r\n        constructor,\r\n        options ? options.extends : undefined\r\n      );\r\n    } else {\r\n      CustomElementRegistry.prototype.define.call(\r\n        customElements,\r\n        name,\r\n        constructor,\r\n        options\r\n      );\r\n      customElements[elementset].add(constructor);\r\n      customElements[elementmap][name] = constructor;\r\n    }\r\n  }\r\n};\r\nset(customElements, Symbol.iterator, () => {\r\n  const entries = Object.entries(customElements[elementmap]);\r\n\r\n  return entries[Symbol.iterator].call(entries);\r\n});\r\n/* customElements[Symbol.iterator] = () => {\r\n  const entries = Object.entries(customElements[elementmap]);\r\n\r\n  return entries[Symbol.iterator].call(entries);\r\n}; */\r\n\r\nconst charactorlist = Array(26)\r\n  .fill(undefined)\r\n  .map((v, i) => 97 + i)\r\n  .map(n => String.fromCharCode(n));\r\n\r\nconst hexnumberlist = Array(16)\r\n  .fill(undefined)\r\n  .map((v, i) => i)\r\n  .map(a => a.toString(16));\r\n\r\nconst charactorandnumberlist = [\r\n  ...new Set([...hexnumberlist, ...charactorlist])\r\n];\r\n\r\nfunction getrandomcharactor() {\r\n  return get(\r\n    //  Array(26)\r\n    //  .fill(undefined)\r\n    //  .map((v, i) => 97 + i)\r\n    // .map(n => String.fromCharCode(n))\r\n    charactorlist,\r\n    Math.floor(Math.random() * charactorlist.length)\r\n  );\r\n}\r\nfunction getrandomhexnumberandcharactor() {\r\n  return get(\r\n    // Array(16)\r\n    //  .fill(undefined)\r\n    // .map((v, i) => i)\r\n    charactorandnumberlist,\r\n    Math.floor(Math.random() * charactorandnumberlist.length)\r\n  );\r\n\r\n  //.toString(16);\r\n}\r\nfunction getrandomstringandnumber(length = 1) {\r\n  return (\r\n    Array(length)\r\n      .fill(undefined)\r\n      .map(() => getrandomcharactor())\r\n\r\n      .join(\"\") +\r\n    \"-\" +\r\n    Array(length)\r\n      .fill(undefined)\r\n      .map(() => getrandomhexnumberandcharactor())\r\n      .join(\"\")\r\n  );\r\n}\r\n","import { Class } from \"./customclass\";\r\n//import setlikearray from \"./setlikearay\";\r\n// const customElementsarray = new Set;\r\nimport RandomDefineCustomElement, {\r\n  invalid_custom_element_class\r\n} from \"./CustomElementRegistry\";\r\nimport { construct } from \"./reflect\";\r\n/* function getcustomelementname(initclass: any): string {\r\n  return customElements(initclass);\r\n} */\r\nimport { isfunction } from \"./util\";\r\n\r\nexport function isclassextendsHTMLElement(initclass: {\r\n  prototype: any;\r\n}): initclass is Class {\r\n  return !!(\r\n    isfunction(initclass) &&\r\n    initclass.prototype &&\r\n    initclass.prototype instanceof HTMLElement\r\n  );\r\n}\r\n\r\n// import Reflect from \"./reflect\";\r\n\r\n// import { Class } from \"./rendervdomtoreal\";\r\n\r\nexport function createcostumelemet(\r\n  initclass: Class | Function,\r\n  propsjson?: object,\r\n  children?: any[]\r\n  //   options?: any\r\n): HTMLElement {\r\n  if (isclassextendsHTMLElement(initclass)) {\r\n    // customElementsarray.push(initclass);\r\n    /*   const elementname =\r\n     getcustomelementname(initclass); */\r\n    /* if (customElements.get(elementname) === initclass) {\r\n    } else {\r\n      customElements.define(elementname, initclass);\r\n    } */\r\n    RandomDefineCustomElement(initclass);\r\n    return construct(initclass, [propsjson, children /* , options */]); // (children);\r\n  } else {\r\n    console.error(initclass);\r\n    console.error(invalid_custom_element_class);\r\n    throw TypeError();\r\n  }\r\n}\r\n","// import { getparentNode } from \"./dom\";\r\n\r\nexport function isconnected(element: Node) {\r\n  return document.documentElement === getancestornode(element);\r\n}\r\nfunction getancestornode(node: Node) {\r\n  while (\r\n    node &&\r\n    node.parentNode &&\r\n    node.parentNode !== document\r\n    /*  getparentNode(node) &&\r\n    getparentNode(node) !== node &&\r\n    getparentNode(node) !== document */\r\n  ) {\r\n    //   if(getparentNode(node)){}\r\n    node = node.parentNode; // getparentNode(node);\r\n  }\r\n  return node;\r\n}\r\n","import ReactiveState from \"./reactivestate\";\r\nimport { isFunction } from \"./util\";\r\nexport const invalid_Function = \"invalid Function\";\r\nconst errormessage =\r\n  \"invalid useMounted or useUnMounted out of createComponent\";\r\nlet ctxopen = false;\r\nlet MountedSet: Set<Function> = new Set();\r\nlet UnMountedSet: Set<Function> = new Set();\r\nlet StateSet: Set<ReactiveState<any>> = new Set();\r\n/* 收集组件内部创建的 ReactiveState*/\r\nexport function getstates(): Array<ReactiveState<any>> {\r\n  return [...StateSet];\r\n}\r\nexport function usestste(state: ReactiveState<any>) {\r\n  if (ctxopen) {\r\n    StateSet.add(state);\r\n  }\r\n}\r\nexport function getMounted() {\r\n  return [...MountedSet];\r\n}\r\nexport function getUnMounted() {\r\n  return [...UnMountedSet];\r\n}\r\nexport function useMounted(fun: Function) {\r\n  if (isFunction(fun)) {\r\n    if (ctxopen) {\r\n      MountedSet.add(fun);\r\n    } else {\r\n      //console.error()\r\n      console.error(errormessage);\r\n      throw Error();\r\n    }\r\n  } else {\r\n    console.error(fun);\r\n    console.error(invalid_Function);\r\n    throw TypeError();\r\n  }\r\n}\r\n\r\nexport function useUnMounted(fun: Function) {\r\n  if (isFunction(fun)) {\r\n    if (ctxopen) {\r\n      UnMountedSet.add(fun);\r\n    } else {\r\n      console.error(errormessage);\r\n      throw Error();\r\n      //throw Error(errormessage);\r\n    }\r\n  } else {\r\n    console.error(fun);\r\n    console.error(invalid_Function);\r\n    throw TypeError();\r\n    //throw TypeError(invalid_Function);\r\n  }\r\n}\r\nexport function clearMounted() {\r\n  MountedSet = new Set();\r\n}\r\n\r\nfunction clearstate() {\r\n  StateSet = new Set();\r\n}\r\nexport function clearUnMounted() {\r\n  UnMountedSet = new Set();\r\n}\r\nexport function openctx() {\r\n  ctxopen = true;\r\n  clearall();\r\n}\r\nexport function closectx() {\r\n  ctxopen = false;\r\n  clearall();\r\n}\r\nfunction clearall() {\r\n  clearMounted();\r\n  clearUnMounted();\r\n  clearstate();\r\n}\r\n","interface CallbackReactiveState1<\r\n  T extends string | number | boolean | undefined | object | bigint\r\n> {\r\n  (...args: ReactiveState<T>[]): void;\r\n}\r\n// import { CallbackReactiveState } from \"./computed\";\r\nimport { invalid_ReactiveState } from \"./conditon\";\r\nimport { invalid_Function } from \"./context-mounted-unmounted-\";\r\nimport ReactiveState, {\r\n  addallistenerssymbol,\r\n  isReactiveState,\r\n  removeallistenerssymbol,\r\n  subscribesymbol\r\n} from \"./reactivestate\";\r\n//import { requestAnimationFrame } from \"./directives\";\r\nimport { isarray, isFunction } from \"./util\";\r\n\r\nexport function watch<\r\n  T extends string | number | boolean | undefined | object | bigint\r\n>(\r\n  state: ReactiveState<T> | Array<ReactiveState<T>>,\r\n\r\n  callback: CallbackReactiveState1<T>\r\n) {\r\n  if (isarray(state)) {\r\n    state.forEach(state1 => {\r\n      watchsingle(state1, () => {\r\n        callback(...state);\r\n      });\r\n    });\r\n  } else if (isReactiveState(state)) {\r\n    watchsingle(state, callback);\r\n  } else {\r\n    console.error(state);\r\n    console.error(callback);\r\n    console.error(invalid_ReactiveState + invalid_Function);\r\n    throw new TypeError();\r\n  }\r\n}\r\n\r\nfunction watchsingle(\r\n  state: ReactiveState<any>,\r\n  callback: Function\r\n  //  statekey?: string\r\n): void {\r\n  if (\r\n    !(\r\n      isReactiveState(state) &&\r\n      // state instanceof ReactiveState\r\n      isFunction(callback)\r\n    )\r\n  ) {\r\n    console.error(state);\r\n    console.error(callback);\r\n    console.error(invalid_ReactiveState + invalid_Function);\r\n\r\n    throw TypeError();\r\n  }\r\n\r\n  state[subscribesymbol](callback);\r\n\r\n  //  if (statekey) {\r\n\r\n  //   state[subscribesymbol](callback, statekey);\r\n  // } else {\r\n\r\n  //  }\r\n\r\n  requestAnimationFrame(() => {\r\n    rewatch(state);\r\n    // state[addallistenerssymbol]();\r\n  });\r\n}\r\nexport function unwatch(state: ReactiveState<any>): void {\r\n  state[removeallistenerssymbol]();\r\n}\r\n\r\nexport function rewatch(state: ReactiveState<any>): void {\r\n  state[addallistenerssymbol]();\r\n}\r\n","export const { requestAnimationFrame } = window;\r\nimport { setelehtml, seteletext } from \"./dom\";\r\nimport { ExtendOptions } from \"./extend-directive\";\r\nimport { isconnected } from \"./isconnected\";\r\nimport ReactiveState, { isReactiveState } from \"./reactivestate\";\r\nimport { isfunction, isobject, isstring } from \"./util\";\r\nimport { watch } from \"./watch\";\r\nimport { set, apply } from \"./reflect\";\r\nimport Virtualdom from \"./virtualdom\";\r\n\r\nconst directive: ExtendOptions = {\r\n  ref(ele: Element, ref: object | Function, _vdom: Virtualdom<any>) {\r\n    console.log(_vdom);\r\n    if (isobject(ref)) {\r\n      set(ref as object, \"value\", ele);\r\n      //   ref.value = ele;\r\n    } else if (isfunction(ref)) {\r\n      apply(ref as Function, undefined, [ele]);\r\n      // ref(ele)\r\n      //   ref.call(undefined, ele);\r\n    } else {\r\n      console.error(ref);\r\n      console.error(\"invalid ref\");\r\n      throw TypeError();\r\n    }\r\n  },\r\n  html(\r\n    ele: Element,\r\n    html: string | ReactiveState<any>,\r\n    _vdom: Virtualdom<any>\r\n  ) {\r\n    console.log(_vdom);\r\n    createhtmlandtextdirective(setelehtml, \"html\")(ele, html);\r\n\r\n    // ele.innerHTML = html;\r\n    // console.log(ele.outerHTML);\r\n    /*  if (typeof html == \"string\") {\r\n      requestAnimationFrame(() => {\r\n        setelehtml(ele, html);\r\n\r\n        /* ele.innerHTML = html;*/\r\n    //   console.log(ele.outerHTML);\r\n    /*     });\r\n    } else if (html instanceof ReactiveState) {\r\n      //   const ReactiveState = html;\r\n      watch(html, (state: { value: any }) => {\r\n        /*ele.innerHTML = String(state);*/\r\n    /*\r\n        setelehtml(ele, String(state));\r\n      });\r\n      //   ReactiveState[subscribesymbol]((state: { value: any }) => {\r\n      //     ele.innerHTML = String(state.value);\r\n      //   });\r\n      requestAnimationFrame(() => {\r\n        // console.log(\"html\");\r\n        /*  ele.innerHTML = String(html);*/\r\n    /*\r\n  //      setelehtml(ele, String(html));\r\n //     });\r\n  //  } else {\r\n\r\n//console.error()\r\n  //    throw TypeError(\"invalid html\");\r\n //   }\r\n\r\n*/\r\n  },\r\n  text(\r\n    ele: Element,\r\n    text: string | ReactiveState<any>,\r\n    _vdom: Virtualdom<any>\r\n  ) {\r\n    console.log(_vdom);\r\n    createhtmlandtextdirective(seteletext, \"text\")(ele, text);\r\n\r\n    /*\r\n\r\n  // ele.textContent = text;\r\n    // console.log(ele.outerHTML);\r\n    if (typeof text == \"string\") {\r\n      requestAnimationFrame(() => {\r\n        seteletext(ele, text);\r\n        /*    ele.textContent = text;*/\r\n    /*      //   console.log(ele.outerHTML);\r\n      });\r\n    } else if (text instanceof ReactiveState) {\r\n      //   const ReactiveState = text;\r\n      watch(text, (state: { value: any }) => {\r\n        seteletext(ele, String(state));\r\n\r\n        /* ele.textContent = String(state);*/\r\n    /*   });\r\n      //   ReactiveState[subscribesymbol]((state: { value: any }) => {\r\n      //     ele.textContent = String(state.value);\r\n      //   });\r\n      requestAnimationFrame(() => {\r\n        // console.log(\"text\");\r\n        seteletext(ele, String(text));\r\n\r\n        /*  ele.textContent = String(text);*/\r\n    /*    });\r\n   // } else {\r\n  //    throw TypeError(\"invalid text\");\r\n //   }\r\n\r\n*/\r\n  }\r\n};\r\nfunction createhtmlandtextdirective(seteletext: Function, errorname: string) {\r\n  return function(ele: Element, text: string | ReactiveState<any>) {\r\n    const element = ele;\r\n    if (\r\n      isstring(text)\r\n      //typeof text == \"string\"\r\n    ) {\r\n      requestAnimationFrame(() => {\r\n        seteletext(ele, text);\r\n        /*    ele.textContent = text;*/\r\n        //   console.log(ele.outerHTML);\r\n      });\r\n    } else if (\r\n      isReactiveState(text)\r\n      //  text instanceof ReactiveState\r\n    ) {\r\n      //   const ReactiveState = text;\r\n      watch(text, (state: { value: any }) => {\r\n        if (isconnected(element)) {\r\n          seteletext(ele, String(state));\r\n        }\r\n        /* ele.textContent = String(state);*/\r\n      });\r\n      //   ReactiveState[subscribesymbol]((state: { value: any }) => {\r\n      //     ele.textContent = String(state.value);\r\n      //   });\r\n      requestAnimationFrame(() => {\r\n        // console.log(\"text\");\r\n        seteletext(ele, String(text));\r\n\r\n        /*  ele.textContent = String(text);*/\r\n      });\r\n    } else {\r\n      console.error(text);\r\n      console.error(\"invalid \" + errorname);\r\n      throw TypeError();\r\n    }\r\n  };\r\n}\r\nexport default directive;\r\n","const componentsymbol = Symbol(\"component\");\r\nexport { componentsymbol };\r\n","import { invalid_Function } from \"./context-mounted-unmounted-\";\r\nimport { domaddlisten, domremovelisten } from \"./dom\";\r\nimport { toArray } from \"./toArray\";\r\nimport { /* isArray, */ isfunction } from \"./util\";\r\nimport { has, set, get } from \"./reflect\";\r\nexport const eventlistenerssymbol = Symbol(\"eventlisteners\");\r\nexport default function(\r\n  element: Element | Node,\r\n  eventname: string,\r\n  callback: EventListener | Array<EventListener>\r\n) {\r\n  /* if (!element[eventlistenerssymbol]) {\r\n    element[eventlistenerssymbol] = [];\r\n  }\r\n*/\r\n  firstaddlisteners(element, eventname, toArray(callback));\r\n  /*\r\n//  if (isfunction(callback)) {\r\n//    firstaddlisteners(element, eventname, [callback]);\r\n//  } else if (isArray(callback)) {\r\n//    firstaddlisteners(element, eventname, callback);\r\n // } else {\r\n //   console.error(callback);\r\n //   throw TypeError(invalid_Function);\r\n // }\r\n*/\r\n}\r\nexport function firstaddlisteners(\r\n  ele: Element | Node,\r\n  event: string,\r\n  callarray: Array<EventListener>\r\n) {\r\n  const element = ele;\r\n  callarray.forEach((call: EventListener) => {\r\n    if (!isfunction(call)) {\r\n      console.error(call);\r\n      console.error(invalid_Function);\r\n      throw TypeError();\r\n    }\r\n\r\n    if (!has(element, eventlistenerssymbol)) {\r\n      set(element, eventlistenerssymbol, []);\r\n      //   element[eventlistenerssymbol] = [];\r\n    }\r\n    (get(ele, eventlistenerssymbol) as any[])\r\n      /* ele[eventlistenerssymbol] */ .push([event, call]);\r\n    domaddlisten(ele, event, call);\r\n  });\r\n}\r\nexport function removelisteners(\r\n  ele: Element | Node\r\n  //   event: string,\r\n  //   callarray: Array<EventListener>\r\n) {\r\n  // const element = ele;\r\n  if (has(ele, eventlistenerssymbol)) {\r\n    (get(ele, eventlistenerssymbol) as any[])\r\n      /*   ele[eventlistenerssymbol] */ .forEach(([event, call]) => {\r\n        //   ele[eventlistenerssymbol].push([event, call]);\r\n        domremovelisten(ele, event, call);\r\n      });\r\n  }\r\n}\r\nexport function readdlisteners(\r\n  ele: Element | Node\r\n  //   event: string,\r\n  //   callarray: Array<EventListener>\r\n) {\r\n  if (has(ele, eventlistenerssymbol)) {\r\n    (get(ele, eventlistenerssymbol) as any[]).forEach(([event, call]) => {\r\n      //   ele[eventlistenerssymbol].push([event, call]);\r\n      domaddlisten(ele, event, call);\r\n    });\r\n  }\r\n}\r\n","import createeleattr from \"@masx200/dom-element-attribute-agent-proxy\";\r\nimport { createcostumelemet } from \"./customelement\";\r\nimport directives from \"./directives\";\r\nimport {\r\n  changetext,\r\n  createDocumentFragment,\r\n  createElementNS,\r\n  createmathelement,\r\n  //   createnonescript,\r\n  createnativeelement,\r\n  createsvgelement,\r\n  createtextnode,\r\n  mathnamespace,\r\n  svgnamespace\r\n} from \"./dom\";\r\nimport { componentsymbol } from \"./iscomponent\";\r\nimport { isconnected } from \"./isconnected\";\r\nimport mount from \"./mount\";\r\nimport onevent /*  eventlistenerssymbol  */ from \"./onevent\";\r\nimport ReactiveState, { isReactiveState } from \"./reactivestate\";\r\nimport { get, has, set } from \"./reflect\";\r\nimport { isArray, isfunction, isnumber, isobject, isstring } from \"./util\";\r\nimport Virtualdom, { isVirtualdom } from \"./virtualdom\";\r\nimport { watch } from \"./watch\";\r\n\r\nexport const bindstatesymbol = Symbol(\"bindstate\");\r\n\r\nexport const reactivestatesymbol = Symbol(\"reactive\");\r\nexport const virtualdomsymbol = Symbol(\"virtualelement\");\r\nfunction throwinvalideletype(type?: any) {\r\n  console.error(type);\r\n  console.error(\"invalid element type!\");\r\n  throw TypeError(/*\"invalid element type!\"*/);\r\n}\r\nexport default function render(\r\n  vdom: Virtualdom<string | Function>,\r\n  namespace?: string\r\n): Element;\r\nexport default function render(\r\n  vdom: Virtualdom<\"script\" | \"\" | \"html\">,\r\n  namespace?: string\r\n): Node;\r\nexport default function render(\r\n  vdom: Array<Virtualdom<any> | string | ReactiveState<any> | number>,\r\n  namespace?: string\r\n): Array<Node | Element>;\r\nexport default function render(\r\n  vdom: string | ReactiveState<any> | number,\r\n  namespace?: string\r\n): Node;\r\nexport default function render(\r\n  vdom: Array<Virtualdom<any>>,\r\n  namespace?: string\r\n): Array<Element>;\r\nexport default function render(\r\n  vdom: Array<string | ReactiveState<any> | number>,\r\n  namespace?: string\r\n): Array<Node>;\r\nexport default function render(\r\n  vdom:\r\n    | Virtualdom<any>\r\n    | string\r\n    | number\r\n    | ReactiveState<any>\r\n    | Array<Virtualdom<any> | string | ReactiveState<any> | number>,\r\n  namespace?: string\r\n): Array<Node | Element> | Element | Node {\r\n  if (isArray(vdom)) {\r\n    return (vdom as (string | number | ReactiveState<any> | Virtualdom<any>)[])\r\n      .map(a => render(a as any))\r\n      .flat(1 / 0);\r\n  }\r\n  if (isnumber(vdom) || isstring(vdom)) {\r\n    const textnode = createtextnode(vdom);\r\n    set(textnode, virtualdomsymbol, vdom);\r\n    // textnode[virtualdomsymbol] = vdom;\r\n    return textnode;\r\n\r\n    // } else if (typeof vdom === \"string\") {\r\n    // return createtextnode(vdom);\r\n  } else if (isReactiveState(vdom) /*instanceof ReactiveState*/) {\r\n    const reactive = vdom;\r\n    const textnode = createtextnode(String(reactive));\r\n    set(textnode, virtualdomsymbol, vdom);\r\n    // textnode[virtualdomsymbol] = reactive;\r\n\r\n    //textnode[reactivestatesymbol] = reactive;\r\n    /*  try {\r\n      reactive[textnodesymbol] = textnode;\r\n    } catch (error) {\r\n      console.warn(error);\r\n    } */\r\n\r\n    watch(reactive, (state: ReactiveState<any>) => {\r\n      if (isconnected(element)) {\r\n        changetext(textnode, String(state));\r\n      }\r\n    });\r\n    const element = textnode;\r\n    set(element, bindstatesymbol, new Set());\r\n    // element[bindstatesymbol] = new Set();\r\n    (get(element, bindstatesymbol) as Set<ReactiveState<any>>).add(reactive);\r\n    // element[bindstatesymbol].add(reactive);\r\n    return textnode;\r\n  } else if (\r\n    isVirtualdom(vdom)\r\n    //vdom instanceof Virtualdom && \"type\" in vdom\r\n  ) {\r\n    const { type } = vdom;\r\n    let element:\r\n      | Element\r\n      | HTMLElement\r\n      | SVGSVGElement\r\n      | SVGElement\r\n      | undefined = undefined;\r\n    if (typeof type === \"string\") {\r\n      if (type === \"script\") {\r\n        /* 禁止加载脚本 */\r\n\r\n        return createDocumentFragment();\r\n      } else if (type === \"svg\") {\r\n        /* 没想到svg的创建方式这么特别?否则显示不出svg */\r\n        element = createsvgelement();\r\n      } else if (type === \"math\") {\r\n        /* 没想到svg的创建方式这么特别?否则显示不出svg */\r\n        element = createmathelement();\r\n      } else if (\"\" === type || type === \"html\") {\r\n        const fragmentnode = createDocumentFragment();\r\n\r\n        mount(render(vdom.children), fragmentnode);\r\n\r\n        return fragmentnode;\r\n        //不要创建html元素\r\n        // return render(vdom.children);\r\n        // element = createDocumentFragment();\r\n      } else {\r\n        element = namespace\r\n          ? createElementNS(namespace, type)\r\n          : createnativeelement(type);\r\n      }\r\n    } else if (typeof type == \"function\") {\r\n      //添加默认props\r\n\r\n      /*static defaultProps = {\r\n        name: 'Omi',\r\n        myAge: 18\r\n  }*/\r\n      if (isobject(type[\"defaultProps\"])) {\r\n        vdom.props = JSON.parse(\r\n          JSON.stringify({ ...type[\"defaultProps\"], ...vdom.props })\r\n        );\r\n      }\r\n\r\n      const propsjson = JSON.parse(\r\n        JSON.stringify({\r\n          ...vdom.props,\r\n          ...Object.fromEntries(\r\n            Object.entries(vdom.bindattr).map(([key, value]) => {\r\n              return [key, value.value];\r\n            })\r\n          )\r\n        })\r\n      );\r\n      element = createcostumelemet(\r\n        type,\r\n        propsjson,\r\n        vdom.children\r\n        // vdom.options\r\n      );\r\n    } else {\r\n      throwinvalideletype(vdom);\r\n      // throw TypeError(\"invalid element type!\");\r\n    }\r\n    // apply(handleprops)\r\n    if (element) {\r\n      handleprops(element, vdom);\r\n    }\r\n\r\n    /* 自定义组件不添加children,而是从构造函数传入 */\r\n    /* web components也可以设置 childnodes,比如说slot */\r\n    /* https://webkit.org/blog/4096/introducing-shadow-dom-api/ */\r\n    /*  */\r\n    /* https://developer.mozilla.org/zh-CN/docs/Web/API/Element/slot */\r\n    if (\r\n      type &&\r\n      (isfunction(type) || isstring(type))\r\n      // /\r\n      //   /\r\n\r\n      /* typeof type !== \"function\" */\r\n    ) {\r\n      /* 如果自己创造的组件就不加children, */\r\n      if (!type[componentsymbol]) {\r\n        if (element) {\r\n          mount(\r\n            vdom.children.map(e => {\r\n              if (type === \"svg\" && isVirtualdom(e)) {\r\n                /* 没想到svg的创建方式这么特别?否则显示不出svg */\r\n                //   element.innerHTML = element.innerHTML;\r\n                return render(e, svgnamespace);\r\n              } else if (type === \"math\" && isVirtualdom(e)) {\r\n                return render(e, mathnamespace);\r\n              } else if (namespace && isVirtualdom(e)) {\r\n                return render(e, namespace);\r\n              } else {\r\n                return render(e as any) as any;\r\n              }\r\n            }),\r\n\r\n            element\r\n          );\r\n          return element;\r\n        }\r\n      }\r\n    }\r\n    return element as Node | Element;\r\n  } else {\r\n    throwinvalideletype(vdom);\r\n    // throw TypeError(\"invalid element type!\");\r\n  }\r\n  //   throw Error();\r\n  //   throwinvalideletype();\r\n\r\n  console.error(vdom);\r\n  throw new Error();\r\n}\r\n\r\nfunction handleprops(\r\n  element: HTMLElement | Element | SVGSVGElement | SVGElement,\r\n  vdom: Virtualdom<any>\r\n) {\r\n  ((element, vdom) => {\r\n    Object.entries(vdom.directives).forEach(([name, value]) => {\r\n      if (\r\n        isfunction(\r\n          directives[name]\r\n        ) /* typeof directives[name] === \"function\" */\r\n        /*name in directives &&*/\r\n      ) {\r\n        directives[name](element, value, vdom);\r\n      } else {\r\n        console.error(vdom.directives);\r\n        console.error(\"invalid directives \" + name);\r\n        throw new Error();\r\n      }\r\n    });\r\n\r\n    const attribute1: { [key: string]: any } = createeleattr(element);\r\n    Object.assign(\r\n      attribute1,\r\n\r\n      /* 把属性为false的先不设置 */\r\n      vdom.props\r\n      // Object.fromEntries(Object.entries(vdom.props).filter())\r\n    );\r\n    /* 添加常量的属性 */\r\n    set(element, virtualdomsymbol, vdom);\r\n    // element[virtualdomsymbol] = vdom;\r\n    vdom.element = element;\r\n    /* 添加绑定属性 */\r\n\r\n    Object.entries(vdom.bindattr).forEach(([key, primitivestate]) => {\r\n      attribute1[key] = primitivestate.valueOf();\r\n      watch(primitivestate, (state: ReactiveState<any>) => {\r\n        if (isconnected(element)) {\r\n          attribute1[key] = state.valueOf();\r\n        }\r\n      });\r\n      /*     primitivestate[subscribesymbol]();\r\n      requestAnimationFrame(() => {\r\n        primitivestate[addallistenerssymbol]();\r\n      }); */\r\n    });\r\n\r\n    /* 添加事件绑定和指令执行 */\r\n\r\n    /*  if (!element[eventlistenerssymbol]) {\r\n      element[eventlistenerssymbol] = [];\r\n    }\r\n*/\r\n    Object.entries(vdom.onevent).forEach(([event, callbacks]) => {\r\n      onevent(element, event, callbacks);\r\n    });\r\n  })(element, vdom);\r\n  /*  if (!element[bindstatesymbol]) {\r\n    element[bindstatesymbol] = new Set();\r\n  }\r\n*/\r\n  [...Object.values(vdom.bindattr), ...Object.values(vdom.directives)]\r\n    .flat(1 / 0)\r\n    .filter(\r\n      e => isReactiveState(e)\r\n      // e instanceof ReactiveState\r\n    )\r\n\r\n    .forEach((e: ReactiveState<any>) => {\r\n      if (!has(element, bindstatesymbol)) {\r\n        set(element, bindstatesymbol, new Set());\r\n        // element[bindstatesymbol] = new Set();\r\n      }\r\n      (get(element, bindstatesymbol) as Set<ReactiveState<any>>).add(e);\r\n      //   element[bindstatesymbol].add(e);\r\n    });\r\n}\r\n","export const invalid_Virtualdom = \"invalid Virtualdom \";\r\nimport { VaildVDom } from \"./conditon\";\r\nimport document from \"./dom\";\r\nimport { isvalidvdom } from \"./html\";\r\nimport mount from \"./mount\";\r\nimport render from \"./rendervdomtoreal\";\r\nimport { toArray } from \"./toArray\";\r\nimport { isArray } from \"./util\";\r\nexport default function MountElement<T extends Element>(\r\n  vdom: VaildVDom | Node | Element | Array<Node | Element>,\r\n  container: T\r\n): T {\r\n  if (isArray(vdom)) {\r\n    vdom = vdom.flat(Infinity);\r\n  }\r\n  const el = container;\r\n  if (!(el instanceof HTMLElement)) {\r\n    console.error(el);\r\n    console.error(\"invalid container HTMLElement!\");\r\n    throw TypeError();\r\n  }\r\n\r\n  if (\r\n    el === document.body ||\r\n    el === document.documentElement ||\r\n    el === document.head\r\n  ) {\r\n    console.error(el);\r\n    console.error(\"Do not mount  to <html> or <body> <head>.\");\r\n    throw Error();\r\n  }\r\n  /*   if (\r\n    !(\r\n      isvalidvdom(vdom) ||\r\n      vdom instanceof Node ||\r\n      (isArray(vdom) && isNodeArray(vdom))\r\n    )\r\n  ) {\r\n    console.error(vdom);\r\n    throw TypeError(invalid_Virtualdom);\r\n  } */\r\n\r\n  /*   let elesarray: Array<any>;\r\n  if (Array.isArray(vdom)) {\r\n    elesarray = vdom;\r\n  } else {\r\n    elesarray = [vdom];\r\n  } */\r\n  const elesarray = toArray(vdom);\r\n  if (isvalidvdom(vdom)) {\r\n    // mount(elesarray.map(e => render(e)), container);\r\n    mount(render(elesarray), container);\r\n  } else if (isNode(vdom) /*  instanceof Node */ || isNodeArray(vdom)) {\r\n    mount(elesarray, container);\r\n  } else {\r\n    console.error(vdom);\r\n    console.error(invalid_Virtualdom);\r\n    throw TypeError();\r\n  }\r\n\r\n  //\r\n  return container;\r\n}\r\nexport function isNodeArray(array: any[]): array is Node[] {\r\n  //https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/every\r\n  return isArray(array) && array.every(a => a instanceof Node);\r\n  //!array.map(e => e instanceof Node).includes(false);\r\n}\r\nexport function isNode(a: any): a is Node {\r\n  return a instanceof Node;\r\n}\r\n","function isArray(a) {\r\n    return Array.isArray(a);\r\n}\r\nconst Reflect = window.Reflect;\r\nconst { ownKeys, deleteProperty, apply, construct, defineProperty, get, getOwnPropertyDescriptor, getPrototypeOf, has, set, setPrototypeOf } = Reflect;\r\nfunction isobject(a) {\r\n    return typeof a === \"object\" && a !== null;\r\n}\r\nfunction isfunction(a) {\r\n    return typeof a === \"function\";\r\n}\r\nfunction deepobserveaddpath(target, callback, patharray = [], ancestor = target) {\r\n    if (!isfunction(callback)) {\r\n        console.error(callback);\r\n        console.error(\"observe callback invalid !\");\r\n        throw Error();\r\n    }\r\n    if (isfunction(target) || isobject(target)) {\r\n        let fakeobj;\r\n        if (isArray(target)) {\r\n            fakeobj = [];\r\n        }\r\n        else if (isfunction(target)) {\r\n            fakeobj = (() => { });\r\n        }\r\n        else {\r\n            fakeobj = {};\r\n        }\r\n        setPrototypeOf(fakeobj, null);\r\n        return new Proxy(fakeobj, {\r\n            defineProperty(t, p, a) {\r\n                callback(ancestor, [...patharray, String(p)], has(a, \"value\") ? a.value : isfunction(a.get) ? a.get() : undefined, get(target, p));\r\n                return defineProperty(target, p, a);\r\n            },\r\n            deleteProperty(t, p) {\r\n                callback(ancestor, [...patharray, String(p)], undefined, get(target, p));\r\n                return deleteProperty(target, p);\r\n            },\r\n            ownKeys() {\r\n                return ownKeys(target);\r\n            },\r\n            has(t, p) {\r\n                return has(target, p);\r\n            },\r\n            getPrototypeOf() {\r\n                return getPrototypeOf(target);\r\n            },\r\n            setPrototypeOf(t, v) {\r\n                return setPrototypeOf(target, v);\r\n            },\r\n            construct(t, argumentslist) {\r\n                if (isfunction(target)) {\r\n                    return construct(target, argumentslist);\r\n                }\r\n            },\r\n            apply(t, thisarg, argarray) {\r\n                if (isfunction(target)) {\r\n                    return apply(target, thisarg, argarray);\r\n                }\r\n            },\r\n            getOwnPropertyDescriptor(t, k) {\r\n                var descripter = getOwnPropertyDescriptor(target, k);\r\n                if (isArray(target) && k === \"length\") {\r\n                    return descripter;\r\n                }\r\n                else {\r\n                    if (descripter) {\r\n                        descripter.configurable = true;\r\n                        return descripter;\r\n                    }\r\n                    else {\r\n                        return;\r\n                    }\r\n                }\r\n            },\r\n            set(t, k, v) {\r\n                if (isfunction(callback)) {\r\n                    callback(ancestor, [...patharray, String(k)], v, get(target, k));\r\n                }\r\n                return set(target, k, v);\r\n            },\r\n            get(t, k) {\r\n                var value = get(target, k);\r\n                if (isfunction(value) || isobject(value)) {\r\n                    return deepobserveaddpath(value, callback, [...patharray, String(k)], target);\r\n                }\r\n                else {\r\n                    return value;\r\n                }\r\n            }\r\n        });\r\n    }\r\n    else {\r\n        return target;\r\n    }\r\n}\r\nfunction observedeepagent(target, callback) {\r\n    if (!isfunction(callback)) {\r\n        console.error(callback);\r\n        console.error(\"observe callback  invalid function !\");\r\n        throw Error();\r\n    }\r\n    if (!isfunction(Proxy)) {\r\n        console.error(\"Proxy unsupported!\");\r\n        throw Error();\r\n    }\r\n    if (isfunction(target) || isobject(target)) {\r\n        return deepobserveaddpath(target, callback);\r\n    }\r\n    else {\r\n        return target;\r\n    }\r\n}\r\n\r\nexport default observedeepagent;\r\n//# sourceMappingURL=index.js.map\r\n","import deepobserve from \"@masx200/deep-observe-agent-proxy\";\r\nimport { isplainobject, isarray, isSet, isobject } from \"./util\";\r\nimport ReactiveState, {\r\n  isReactiveState,\r\n  dispatchsymbol\r\n} from \"./reactivestate\";\r\nimport {\r\n  defineProperty,\r\n  ownKeys,\r\n  get,\r\n  getOwnPropertyDescriptor,\r\n  has,\r\n  deleteProperty,\r\n  set\r\n} from \"./reflect\";\r\nimport { watch } from \"./watch\";\r\nimport { set_prototype } from \"./createstate\";\r\n\r\nexport default function(init: object): ReactiveState<object> {\r\n  let initobj = init;\r\n  const containReactiveState =\r\n    isplainobject(init) && Object.values(init).some(a => isReactiveState(a));\r\n  const state_entries = Object.entries(init).filter(e => {\r\n    const a = e[1];\r\n    return isReactiveState(a);\r\n  });\r\n  if (containReactiveState) {\r\n    initobj = { ...init };\r\n    state_entries.forEach(([key, state]) => {\r\n      defineProperty(initobj, key, {\r\n        enumerable: true,\r\n        get() {\r\n          return state.valueOf();\r\n        },\r\n        configurable: true\r\n      });\r\n    });\r\n  }\r\n  const reactive: ReactiveState<object> = new ReactiveState(initobj);\r\n  if (containReactiveState) {\r\n    state_entries.forEach(([key, state]) => {\r\n      watch(state, () => {\r\n        reactive[dispatchsymbol](String(key));\r\n      });\r\n    });\r\n    // console.log(reactive);\r\n  }\r\n  const objproxyhandler: ProxyHandler<object> = {};\r\n  objproxyhandler.ownKeys = target => {\r\n    return Array.from(\r\n      new Set([...ownKeys(target), ...ownKeys(get(target, \"value\"))])\r\n    );\r\n  };\r\n  objproxyhandler.setPrototypeOf = () => {\r\n    return false;\r\n  };\r\n  objproxyhandler.defineProperty = () => {\r\n    return false;\r\n  };\r\n  objproxyhandler.getOwnPropertyDescriptor = (\r\n    target: ReactiveState<object>,\r\n    key\r\n  ) => {\r\n    const myvalue = get(target, \"value\");\r\n\r\n    const descripter =\r\n      getOwnPropertyDescriptor(target, key) ||\r\n      getOwnPropertyDescriptor(myvalue, key);\r\n    if (descripter) {\r\n      descripter.configurable = true;\r\n    }\r\n\r\n    return descripter;\r\n  };\r\n  objproxyhandler.deleteProperty = (target: ReactiveState<object>, key) => {\r\n    const myvalue = get(target, \"value\");\r\n    if (has(myvalue, key)) {\r\n      deleteProperty(myvalue, key);\r\n      target[dispatchsymbol](String(key));\r\n      return true;\r\n    } else {\r\n      return true;\r\n    }\r\n  };\r\n  objproxyhandler.has = (target: ReactiveState<object>, key) => {\r\n    const myvalue = get(target, \"value\");\r\n    return has(target, key) || has(myvalue, key);\r\n  };\r\n  objproxyhandler.get = (target: ReactiveState<object>, key) => {\r\n    const value = get(target, \"value\");\r\n    if (key === \"value\" && (isarray(value) || isplainobject(value))) {\r\n      return deepobserve(get(target, key), (_target_, patharray) => {\r\n        target[dispatchsymbol](patharray[0]);\r\n      });\r\n    } else if (has(target, key)) {\r\n      return get(target, key);\r\n    } else if (has(value, key)) {\r\n      if (\r\n        isSet(value) &&\r\n        (key === \"add\" || key === \"clear\" || key === \"delete\")\r\n      ) {\r\n        switch (key) {\r\n          case \"add\": {\r\n            return (add: any) => {\r\n              if (!set_prototype.has.call(value, add)) {\r\n                const returnvalue = set_prototype[key].call(value, add);\r\n                target[dispatchsymbol]();\r\n                return returnvalue;\r\n              }\r\n              return;\r\n            };\r\n          }\r\n          // break;\r\n          case \"delete\": {\r\n            return (dele: any) => {\r\n              if (set_prototype.has.call(value, dele)) {\r\n                const returnvalue = set_prototype[key].call(value, dele);\r\n                target[dispatchsymbol]();\r\n                return returnvalue;\r\n              }\r\n              return;\r\n            };\r\n          }\r\n          // break;\r\n          case \"clear\": {\r\n            return () => {\r\n              if (value.size) {\r\n                const returnvalue = set_prototype[key].call(value);\r\n                target[dispatchsymbol]();\r\n                return returnvalue;\r\n              }\r\n              return;\r\n            };\r\n          }\r\n          // break;\r\n        }\r\n      } else if (isarray(value) || isplainobject(value)) {\r\n        return deepobserve(get(value, key), () => {\r\n          target[dispatchsymbol](String(key));\r\n        });\r\n      } else {\r\n        return get(value, key);\r\n      }\r\n    }\r\n  };\r\n  objproxyhandler.set = (target: ReactiveState<object>, key, value) => {\r\n    if (isReactiveState(value)) {\r\n      //如果遇到 isReactiveState则自动解包\r\n      value = value.valueOf();\r\n    }\r\n    const myvalue = get(target, \"value\");\r\n    if (key === \"value\" && isobject(value)) {\r\n      // if (target[key] !== value) {\r\n      set(target, key, value);\r\n      target[dispatchsymbol]();\r\n    } else if (!has(target, key)) {\r\n      set(myvalue, key, value);\r\n      target[dispatchsymbol](String(key));\r\n\r\n      //\r\n    }\r\n    return true;\r\n  };\r\n  return new Proxy(\r\n    reactive,\r\n\r\n    objproxyhandler\r\n  ) as ReactiveState<object>;\r\n}\r\n","// import deepobserve from \"deep-observe-agent-proxy\";\r\nimport { getproperyreadproxy } from \"./computed\";\r\nimport { usestste } from \"./context-mounted-unmounted-\";\r\nimport handleobjectstate from \"./handleobjectstate\";\r\nimport ReactiveState, {\r\n  dispatchsymbol,\r\n  invalid_primitive_or_object_state,\r\n  // textnodesymbol,\r\n  isReactiveState\r\n} from \"./reactivestate\";\r\nimport { set } from \"./reflect\";\r\nimport { isobject, isprimitive } from \"./util\";\r\nexport const set_prototype = Set.prototype;\r\n\r\nexport default function<\r\n  T extends string | number | boolean | undefined | object | bigint\r\n>(init: ReactiveState<T>): ReactiveState<T>;\r\nexport default function<\r\n  T extends string | number | boolean | undefined | object | bigint\r\n>(init: T): ReactiveState<T>;\r\nexport default function<\r\n  T extends string | number | boolean | undefined | object | bigint\r\n>(init: T | ReactiveState<T>): ReactiveState<T> {\r\n  /* 收集组件内部创建的 ReactiveState*/\r\n  const state: ReactiveState<T> = createstate(init) as ReactiveState<T>;\r\n  usestste(state);\r\n  return state;\r\n}\r\n\r\nfunction createstate<\r\n  T extends string | number | boolean | undefined | object | bigint\r\n>(init: ReactiveState<T>): ReactiveState<T>;\r\nfunction createstate<\r\n  T extends string | number | boolean | undefined | object | bigint\r\n>(init: T): ReactiveState<T>;\r\n\r\nfunction createstate<\r\n  T extends string | number | boolean | undefined | object | bigint\r\n>(init: T | ReactiveState<T>) {\r\n  if (!(isprimitive(init) || isobject(init) || isReactiveState(init))) {\r\n    console.error(init);\r\n    console.error(invalid_primitive_or_object_state);\r\n    throw TypeError();\r\n  }\r\n\r\n  if (isprimitive(init)) {\r\n    return getproperyreadproxy(\r\n      new Proxy(new ReactiveState(init), {\r\n        defineProperty() {\r\n          return false;\r\n        },\r\n        deleteProperty() {\r\n          return false;\r\n        },\r\n        set(target, key, value) {\r\n          /*  if (key === textnodesymbol) {\r\n          return set(target, key, value);\r\n        } */\r\n          if (key === \"value\" && isprimitive(value)) {\r\n            if (target[key] !== value) {\r\n              /* 如果相同则不触发事件 */\r\n              set(target, key, value);\r\n              target[dispatchsymbol]();\r\n            }\r\n            return true;\r\n          } else {\r\n            return false;\r\n          }\r\n        },\r\n        setPrototypeOf() {\r\n          return false;\r\n        }\r\n      })\r\n    );\r\n  } else if (\r\n    isReactiveState(init)\r\n    // init instanceof ReactiveState\r\n  ) {\r\n    // 如果init是个 ReactiveState，则对其解包，并生成新的 ReactiveState\r\n    return createstate(init.valueOf());\r\n  } else if (isobject(init)) {\r\n    //如果在 ReactiveState属性中包含 ReactiveState，则转换成语法糖\r\n    //ReactiveState1=createstate( {aaaaa:ReactiveState2})\r\n    //\r\n    // else {\r\n    //   console.error(init);\r\n    //console.error(invalid_primitive_or_object_state)\r\n    //  throw TypeError();\r\n    //throw TypeError(\"invalid State\");\r\n    // }\r\n    return handleobjectstate(init);\r\n  } else {\r\n    throw Error();\r\n  }\r\n}\r\n\r\n// /*\r\n// let initobj=init\r\n// const containReactiveState=(isplainobject(init))&&Object.values(init).map(a=>isReactiveState(a)).includes(true)\r\n// const state_entries=Object.entries(init).filter(([key,a])=>isReactiveState(a))\r\n\r\n// if(\r\n// containReactiveState\r\n// ){\r\n\r\n// initobj={...init}\r\n\r\n// state_entries\r\n// .forEach(\r\n// ([key,state])=>{\r\n\r\n// defineProperty(initobj,key,{\r\n// enumerable:true,\r\n// get(){\r\n\r\n// return state.valueOf()\r\n\r\n// },\r\n// configurable: true\r\n\r\n// })\r\n\r\n// })\r\n\r\n// }\r\n// let reactive\r\n// =new ReactiveState(\r\n\r\n// initobj\r\n\r\n// )\r\n\r\n// if(containReactiveState){\r\n// state_entries.forEach(\r\n// ([key,state])=>{\r\n\r\n// watch(state,()=>{\r\n\r\n// reactive[dispatchsymbol](String(key));\r\n\r\n// })\r\n// }\r\n// )\r\n// }\r\n\r\n//     return new Proxy(\r\n// reactive\r\n\r\n// , {\r\n//     ownKeys(target) {\r\n//     return Array.from(\r\n//       new Set([...ownKeys(target), ...ownKeys(get(target, \"value\"))])\r\n//     );\r\n//   }\r\n//   ,\r\n//   setPrototypeOf() {\r\n//     return false;\r\n//   },\r\n//       defineProperty() {\r\n//         return false;\r\n//       },\r\n//       getOwnPropertyDescriptor(target, key) {\r\n//         const myvalue = get(target, \"value\");\r\n\r\n//         const descripter =\r\n//           getOwnPropertyDescriptor(target, key) ||\r\n//           getOwnPropertyDescriptor(myvalue, key);\r\n//         if (descripter) {\r\n//           descripter.configurable = true;\r\n//         }\r\n\r\n//         return descripter;\r\n//       },\r\n//       deleteProperty(target, key) {\r\n//         const myvalue = get(target, \"value\");\r\n//         if (has(myvalue, key)) {\r\n//           deleteProperty(myvalue, key);\r\n//           target[dispatchsymbol](String(key));\r\n//           return true;\r\n//         } else {\r\n//           return true;\r\n//         }\r\n//       },\r\n//       has(target, key) {\r\n//         const myvalue = get(target, \"value\");\r\n//         return has(target, key) || has(myvalue, key);\r\n//       },\r\n//       get(target, key) {\r\n//         const value = get(target, \"value\");\r\n\r\n//         if (\r\n//           key === \"value\" &&\r\n//           (isarray(value)  || isplainobject(value))\r\n//         ) {\r\n//           return deepobserve(get(target, key), (_target_, patharray) => {\r\n//             target[dispatchsymbol](patharray[0]);\r\n//           });\r\n//         } else if (has(target, key)) {\r\n//           return get(target, key);\r\n//         } else if (has(value, key)) {\r\n//           if (isSet(value) ) {\r\n//             const myvalue = value;\r\n//             if (key === \"add\") {\r\n//               return (add: any) => {\r\n//                 if (!set_prototype.has.call(myvalue, add)) {\r\n//                   const returnvalue = set_prototype[key].call(myvalue, add);\r\n//                   target[dispatchsymbol]();\r\n//                   return returnvalue;\r\n//                 }\r\n//               };\r\n//             } else if (key === \"delete\") {\r\n//               return (dele: any) => {\r\n//                 if (\r\n// set_prototype.has.call(myvalue, dele)) {\r\n//                   const returnvalue = set_prototype[key].call(myvalue, dele);\r\n//                   target[dispatchsymbol]();\r\n//                   return returnvalue;\r\n//                 }\r\n//               }\r\n// else if (key === \"clear\") {\r\n//               return () => {\r\n//                 if (value.length) {\r\n//                   const returnvalue = set_prototype[key].call(myvalue);\r\n//                   target[dispatchsymbol]();\r\n//                   return returnvalue;\r\n//                 }\r\n//               }\r\n// else {\r\n\r\n// return  get(value, key)\r\n// }\r\n\r\n//             }\r\n//           } else {\r\n// //只深度观察array和plainobject\r\n// if(\r\n// (isarray(value)  || isplainobject(value))\r\n// ){\r\n// return deepobserve(get(value, key), () => {\r\n//               target[dispatchsymbol](String(key));\r\n//             });\r\n// }\r\n// else{\r\n// return get(value, key)\r\n// }\r\n\r\n//           }\r\n\r\n//           /*  */\r\n//         }\r\n//     }},\r\n\r\n//     set(target, key, value)\r\n//      {\r\n\r\n// if(isReactiveState(value)){\r\n// //如果遇到 isReactiveState则自动解包\r\n// value=value.valueOf()\r\n\r\n// }\r\n//       /*   if (key === textnodesymbol) {\r\n//         return set(target, key, value);\r\n//       } */\r\n//       const myvalue = get(target, \"value\");\r\n//       if (key === \"value\" && isobject(value)) {\r\n//         // if (target[key] !== value) {\r\n//         set(target, key, value);\r\n//         target[dispatchsymbol]();\r\n\r\n//         // }\r\n//         return true;\r\n//       } else if (!has(target, key)) {\r\n//         set(myvalue, key, value);\r\n//         target[dispatchsymbol](String(key));\r\n\r\n//         //\r\n//       } else if (key === \"length\") {\r\n//         set(myvalue, key, value);\r\n//         target[dispatchsymbol](key);\r\n//       } else {\r\n//         return false;\r\n//       }\r\n//       return true;\r\n\r\n//     }\r\n\r\n// }) */\r\n","export { createcssBlob };\r\nfunction createcssBlob(source: string) {\r\n  return URL.createObjectURL(new Blob([source], { type: \"text/css\" }));\r\n}\r\n","import createElement from \"./createelement\";\r\nimport { createcssBlob } from \"./cssurlblob\";\r\n// import { RegExp } from \"core-js\";\r\nimport {\r\n  appendchild,\r\n  createanotherhtmldocument /* , insertfirst */\r\n} from \"./dom\";\r\nimport { get } from \"./reflect\";\r\nimport render from \"./rendervdomtoreal\";\r\nimport { gettagtype } from \"./util\";\r\nexport function isCSSMediaRule(a: any): a is CSSMediaRule {\r\n  return gettagtype(a) === \"cssmediarule\";\r\n}\r\nexport function isCSSImportRule(a: any): a is CSSImportRule {\r\n  return gettagtype(a) === \"cssimportrule\";\r\n}\r\n\r\nexport function parsecsstext(text: string): Array<CSSRule> {\r\n  const styleelement = render(\r\n    createElement(\"style\", [text])\r\n  ) as HTMLStyleElement;\r\n  //   console.dir(styleelement);\r\n  /* 只有添加到document之后才会有sheet */\r\n  //const otherdocument = document.implementation.createHTMLDocument(\"\");\r\n  const otherdocument = createanotherhtmldocument();\r\n  appendchild(otherdocument.documentElement, styleelement);\r\n  //otherdocument.firstElementChild.appendChild(styleelement);\r\n  return Array.from(\r\n    get(\r\n      get(styleelement, \"sheet\"),\r\n\r\n      \"cssRules\"\r\n    )\r\n  );\r\n}\r\n\r\nexport function isCSSStyleRule(a: any): a is CSSStyleRule {\r\n  return gettagtype(a) === \"cssstylerule\";\r\n}\r\n\r\nexport function selectoraddprefix(cssstylerule: CSSStyleRule, prefix: string) {\r\n  //css 选择器可能有多个\r\n  //h1,p,h3,div\r\n  const selectorText = cssstylerule.selectorText;\r\n\r\n  const selectorarray = selectorText.split(\",\");\r\n  cssstylerule.selectorText = selectorarray\r\n    .map(selectorText => {\r\n      let prefixselector = prefix + \" \" + selectorText;\r\n\r\n      if (selectorText.startsWith(\"*\")) {\r\n        prefixselector =\r\n          prefixselector + \",\" + selectorText.replace(\"*\", prefix);\r\n      }\r\n      return prefixselector;\r\n    })\r\n    .join(\",\");\r\n  /*\r\n  const prefixselector = prefix + \" \" + selectorText;\r\n  if (selectorText.startsWith(\"*\")) {\r\n    cssstylerule.selectorText =\r\n      selectorText.replace(\"*\", prefix) + \",\" + prefixselector;\r\n    /* 对于'* '的处理,变成两个selectorrule*/\r\n\r\n  /* \r\n    *{font-size:80px !important;}\r\np{color:blue !important;} \r\n*/\r\n  /* \r\n    \r\n    q-9, q-9 * { font-size: 80px !important; }\r\nq-9 p { color: blue !important; }\r\n\r\n    */\r\n  /* } else {\r\n    cssstylerule.selectorText = prefixselector;\r\n  }\r\n*/\r\n  return cssstylerule;\r\n}\r\n\r\nexport function prefixcssrules(\r\n  cssRulesarray: Array<CSSRule>,\r\n  prefix: string\r\n): Array<CSSRule> {\r\n  return cssRulesarray\r\n    .map((cssrule: CSSRule) => {\r\n      if (isCSSStyleRule(cssrule)) {\r\n        return selectoraddprefix(cssrule, prefix);\r\n      } else if (isCSSMediaRule(cssrule)) {\r\n        prefixcssrules(Array.from(cssrule.cssRules), prefix);\r\n        return cssrule;\r\n      } else if (isCSSImportRule(cssrule)) {\r\n        //把url放入\r\n        savestyleblob(prefix, undefined, cssrule.href);\r\n        return;\r\n      } else {\r\n        return cssrule;\r\n      }\r\n    })\r\n    .filter(Boolean) as Array<CSSRule>;\r\n}\r\n\r\nconst componentsstylesheet: { [key: string]: Set<string> } = {};\r\nexport { componentsstylesheet };\r\nexport function savestyleblob(\r\n  tagname: string,\r\n  csstext?: string,\r\n  urltext?: string\r\n) {\r\n  tagname = tagname.toLowerCase();\r\n  if (!componentsstylesheet[tagname]) {\r\n    componentsstylesheet[tagname] = new Set();\r\n  }\r\n  if (csstext) {\r\n    componentsstylesheet[tagname].add(createcssBlob(csstext));\r\n  } else if (urltext) {\r\n    componentsstylesheet[tagname].add(urltext);\r\n  }\r\n}\r\nexport function cssrulestocsstext(cssrules: Array<CSSRule>): string {\r\n  return cssrules.map(c => c.cssText).join(\"\\n\");\r\n  // .replace(/\\n/g, \"\");\r\n}\r\nexport function createlinkstylesheet(url: string): HTMLLinkElement {\r\n  return render(\r\n    createElement(\"link\", { href: url, rel: \"stylesheet\" })\r\n  ) as HTMLLinkElement;\r\n}\r\nexport function transformcsstext(text: string, prefix: string): string {\r\n  const css = text;\r\n  const cssomold = parsecsstext(css);\r\n  const cssomnew = prefixcssrules(cssomold, prefix).filter(Boolean);\r\n  //   console.log([css, prefix, cssomold, cssomnew]);\r\n  const cssnewtext = cssrulestocsstext(cssomnew);\r\n  //   console.log([text, cssomold, cssomnew, cssnewtext]);\r\n  return cssnewtext;\r\n}\r\nexport function registercssprefix(text: string, prefix: string) {\r\n  const css = text;\r\n  const cssnewtext = transformcsstext(css, prefix);\r\n  //   cssnewtext.forEach(url => {\r\n  /* 把css文字转成url放入 */\r\n  savestyleblob(prefix, cssnewtext);\r\n  //   });\r\n}\r\nexport function loadlinkstyle(\r\n  stylelinkelement: HTMLElement,\r\n  container: HTMLElement | Element | SVGSVGElement | SVGElement\r\n) {\r\n  return new Promise(rs => {\r\n    const loaderrorfun = () => {\r\n      stylelinkelement.onload = stylelinkelement.onerror = null;\r\n      rs();\r\n      //   console.log(stylelinkelement.href);\r\n    };\r\n    stylelinkelement.onload = loaderrorfun;\r\n    stylelinkelement.onerror = loaderrorfun;\r\n    appendchild(container, stylelinkelement);\r\n  });\r\n}\r\n\r\nexport function waitloadallstyle(\r\n  prefix: string,\r\n  _this: Element | HTMLElement | SVGSVGElement | SVGElement\r\n) {\r\n  return Promise.all(\r\n    [...componentsstylesheet[prefix]].map(styleurl =>\r\n      loadlinkstyle(createlinkstylesheet(styleurl), _this)\r\n    )\r\n  );\r\n}\r\n","export default function<T extends object>(target: T): T {\r\n  return new Proxy(target, {\r\n    set() {\r\n      return true;\r\n    },\r\n    defineProperty() {\r\n      return false;\r\n    },\r\n    deleteProperty() {\r\n      return false;\r\n    },\r\n    setPrototypeOf() {\r\n      return false;\r\n    }\r\n  });\r\n}\r\n","export const readysymbol = Symbol(\"ready\");\r\n","export function setimmediate(fun: Function) {\r\n  return Promise.resolve().then(() => fun());\r\n}\r\n","export const innerstatesymbol = Symbol(\"innerstate\");\r\nimport createeleattragentreadwrite from \"@masx200/dom-element-attribute-agent-proxy\";\r\nimport { AttrChange } from \"./attrchange\";\r\nimport {\r\n  closectx,\r\n  getMounted,\r\n  getstates,\r\n  getUnMounted,\r\n  invalid_Function,\r\n  openctx\r\n} from \"./context-mounted-unmounted-\";\r\nimport { /* createApp, */ invalid_Virtualdom } from \"./createApp\";\r\nimport createstate from \"./createstate\";\r\nimport { Class, Custom } from \"./customclass\";\r\nimport { seteletext } from \"./dom\";\r\nimport { onmounted, onunmounted } from \"./elementonmountandunmount\";\r\nimport { isvalidvdom } from \"./html\";\r\n// import { Promise } from \"q\";\r\n// import { inflate } from \"zlib\";\r\nimport { componentsymbol } from \"./iscomponent\";\r\n// import { insertfirst } from \"./dom\";\r\nimport mount from \"./mount\";\r\nimport {\r\n  /* parsecsstext,\r\n    prefixcssrules,\r\n    cssrulestocsstext, */\r\n  //   savestyleblob,\r\n  componentsstylesheet,\r\n  //   createlinkstylesheet,\r\n  //   transformcsstext,\r\n  registercssprefix,\r\n  /*  loadlinkstyle,\r\n    createlinkstylesheet */\r\n  //   savestyleblob\r\n  waitloadallstyle\r\n} from \"./parsecss\";\r\nimport ReactiveState /* , { dispatchsymbol } */ from \"./reactivestate\";\r\nimport readonlyproxy from \"./readonlyproxy\";\r\nimport { readysymbol } from \"./readysymbol\";\r\nimport { get, set } from \"./reflect\";\r\nimport render from \"./rendervdomtoreal\";\r\nimport { setimmediate } from \"./setimmediate\";\r\nimport { toArray } from \"./toArray\";\r\nimport { isArray, isfunction, isobject, isstring } from \"./util\";\r\n// import { Class } from \"./rendervdomtoreal\";\r\nimport Virtualdom from \"./virtualdom\";\r\nconst attributessymbol = Symbol(\"attributes\");\r\nconst elementsymbol = Symbol(\"innerelement\");\r\nconst vdomsymbol = Symbol(\"innervdom\");\r\nconst mountedsymbol = Symbol(\"mounted\");\r\nconst unmountedsymbol = Symbol(\"unmounted\");\r\n\r\nexport function createComponent(custfun: Custom): Class {\r\n  if (isfunction(custfun)) {\r\n    const defaultProps = get(custfun, \"defaultProps\"); //custfun[\"defaultProps\"];\r\n    const css = get(custfun, \"css\");\r\n    return class Component extends AttrChange {\r\n      [innerstatesymbol]: Array<ReactiveState<any>>;\r\n      static [componentsymbol] = true;\r\n      static css = isstring(css) && css ? css : undefined;\r\n      [readysymbol] = false;\r\n      [mountedsymbol]: Array<Function>;\r\n      [unmountedsymbol]: Array<Function>;\r\n      static defaultProps = isobject(defaultProps)\r\n        ? JSON.parse(JSON.stringify(defaultProps))\r\n        : undefined;\r\n      [attributessymbol]: { [s: string]: ReactiveState<any> } | object = {};\r\n      [elementsymbol]: Array<Node>;\r\n      [vdomsymbol]: Array<\r\n        Virtualdom<any> | ReactiveState<any> | string | number\r\n      >;\r\n      constructor(\r\n        propsjson: object = {},\r\n        children: any[] = [] /* , options?: any */\r\n      ) {\r\n        super();\r\n\r\n        const css = get(this.constructor, \"css\");\r\n\r\n        if (css) {\r\n          const prefix = this.tagName.toLowerCase();\r\n          if (!componentsstylesheet[prefix]) {\r\n            registercssprefix(css, prefix);\r\n            /* 把css文本先解析成cssom ,然后添加前缀,然后转成字符串,生成blob,再生成link-stylesheet,添加*/\r\n            /* const cssomold = parsecsstext(css);\r\n            const cssomnew = prefixcssrules(cssomold, prefix);\r\n            //   console.log([css, prefix, cssomold, cssomnew]);\r\n            const cssnewtext = cssrulestocsstext(cssomnew); */\r\n            // const cssnewtext = transformcsstext(css, prefix);\r\n            // savestyleblob(prefix, cssnewtext);\r\n            // console.log(cssnewtext, componentsstylesheet);\r\n          }\r\n        }\r\n        const defaultProps = get(this.constructor, \"defaultProps\");\r\n        // this.constructor[\"defaultProps\"];\r\n        const attrs = createeleattragentreadwrite(this);\r\n        //   const props = {};\r\n        if (isobject(defaultProps)) {\r\n          Object.assign(attrs, defaultProps);\r\n          // Object.assign(props, this.constructor[\"defaultProps\"]);\r\n        }\r\n        if (isobject(propsjson)) {\r\n          Object.assign(attrs, propsjson);\r\n          // Object.assign(props, propsjson);\r\n        }\r\n        //   this[attributessymbol] = createeleattragentreadwrite(this);\r\n        // const props = createeleattragentreadwrite(this);/\r\n        openctx();\r\n        const props = attrs;\r\n        const thisattributess = Object.fromEntries(\r\n          Object.entries(props).map(([key, value]) => [key, createstate(value)])\r\n        );\r\n        this[attributessymbol] = readonlyproxy(thisattributess);\r\n\r\n        /* 把attributes的reactivestates也放进innerstates中 */\r\n        const readonlyprop = readonlyproxy(\r\n          Object.fromEntries(\r\n            Object.entries(thisattributess).map(([key, value]) => [\r\n              key,\r\n              readonlyproxy(value)\r\n            ])\r\n          )\r\n        );\r\n\r\n        let possiblyvirtualdom:\r\n          | string\r\n          | Virtualdom<any>\r\n          | ReactiveState<any>\r\n          | (string | Virtualdom<any> | ReactiveState<any>)[]\r\n          | any;\r\n        try {\r\n          possiblyvirtualdom = custfun.call(\r\n            undefined,\r\n            //让组件里面无法修改props的reactivestate的value\r\n            // readonlyproxy(thisattributess),\r\n            readonlyprop,\r\n            children\r\n          );\r\n        } catch (error) {\r\n          closectx();\r\n          console.error(error);\r\n          throw error;\r\n        }\r\n\r\n        if (isArray(possiblyvirtualdom)) {\r\n          possiblyvirtualdom = possiblyvirtualdom\r\n            .flat(Infinity)\r\n            .filter(Boolean);\r\n        }\r\n        if (isvalidvdom(possiblyvirtualdom)) {\r\n          const thisvdomsymbol /* isArray(possiblyvirtualdom)\r\n            ? possiblyvirtualdom\r\n            : [possiblyvirtualdom]; */ = toArray(\r\n            possiblyvirtualdom\r\n          );\r\n          //\r\n          this[vdomsymbol] = thisvdomsymbol.flat(Infinity).filter(Boolean);\r\n          this[mountedsymbol] = getMounted();\r\n          this[unmountedsymbol] = getUnMounted();\r\n          this[innerstatesymbol] = getstates();\r\n          closectx();\r\n        } else {\r\n          closectx();\r\n          console.error(possiblyvirtualdom);\r\n          console.error(invalid_Virtualdom);\r\n          throw TypeError();\r\n        }\r\n\r\n        //   this[mountedsymbol] = getMounted();\r\n        //   this[unmountedsymbol] = getUnMounted();\r\n      }\r\n\r\n      connectedCallback() {\r\n        if (!this[elementsymbol]) {\r\n          this[elementsymbol] = render(this[vdomsymbol]).flat(Infinity);\r\n        }\r\n        if (!this[readysymbol]) {\r\n          this[readysymbol] = true;\r\n          /* 这段代码只在初始化时执行一次 */\r\n          //   mount(this[elementsymbol], this, false);\r\n\r\n          const css = get(this.constructor, \"css\");\r\n          const prefix = this.tagName.toLowerCase();\r\n          if (css && componentsstylesheet[prefix]) {\r\n            /* 先清空当前组件 的children */\r\n\r\n            seteletext(this, \"\");\r\n            /* 应该要等待css加载完成之后再渲染出来,否则会有页面跳动 */\r\n            /* 是css里面的@import导致的 */\r\n            /* 挂载样式到组件最前面 */\r\n            //   console.log(componentsstylesheet[prefix]);\r\n            // if (componentsstylesheet[prefix]) {\r\n            /* const stylelinkelement = createlinkstylesheet(\r\n              componentsstylesheet[prefix]\r\n            ); */\r\n            /*   stylelinkelement.onload = () => {\r\n              mount(this[elementsymbol], this, false);\r\n            };\r\n            stylelinkelement.onerror = () => {\r\n              mount(this[elementsymbol], this, false);\r\n            }; */\r\n            // insertfirst(this, stylelinkelement);\r\n            // }\r\n            /*  Promise.all(\r\n              [...componentsstylesheet[prefix]].map(styleurl =>\r\n                loadlinkstyle(createlinkstylesheet(styleurl), this)\r\n              )\r\n            )\r\n*/\r\n            waitloadallstyle(prefix, this).then(() => {\r\n              //   console.log(\"style load all\");\r\n              //   console.log(\"mount1\");\r\n              mount(this[elementsymbol], this, false);\r\n            });\r\n          } else {\r\n            // console.log(\"mount2\");\r\n            mount(this[elementsymbol], this);\r\n          }\r\n        }\r\n        //把mounted callback 异步执行\r\n        this[mountedsymbol].forEach(f => {\r\n          setimmediate(f);\r\n        });\r\n        onmounted(this);\r\n      }\r\n      disconnectedCallback() {\r\n        this[unmountedsymbol].forEach(f => {\r\n          setimmediate(f);\r\n        });\r\n        onunmounted(this);\r\n      }\r\n      attributeChangedCallback(\r\n        name: string /* , oldValue: any, newValue: any */\r\n      ) {\r\n        // console.log(this[attributessymbol]);\r\n        if (get(this, attributessymbol)[name]) {\r\n          /* 当属性改变时要跟ReactiveState同步状态 */\r\n          set(\r\n            get(this, attributessymbol)[name],\r\n            \"value,\",\r\n            (createeleattragentreadwrite(this) as { [key: string]: any })[\r\n              name\r\n            ] as any\r\n          );\r\n          /*   this[attributessymbol][name].value = createeleattragentreadwrite(\r\n            this\r\n          )[name]; */\r\n          //   this[attributessymbol][name][dispatchsymbol]();\r\n        }\r\n      }\r\n    };\r\n  } else {\r\n    console.error(custfun);\r\n    console.error(invalid_Function);\r\n    throw TypeError();\r\n  }\r\n}\r\n","import { innerstatesymbol } from \"./createComponent\";\r\nimport { getdomchildren } from \"./dom\";\r\nimport {\r\n  eventlistenerssymbol,\r\n  readdlisteners,\r\n  removelisteners\r\n} from \"./onevent\";\r\nimport ReactiveState from \"./reactivestate\";\r\nimport { bindstatesymbol } from \"./rendervdomtoreal\";\r\nimport { isArray } from \"./util\";\r\nimport { rewatch /* , unwatch */, unwatch } from \"./watch\";\r\nimport { isNode } from \"./createApp\";\r\nimport { has, get } from \"./reflect\";\r\n\r\nexport function onmounted(ele: Element | Node | Array<Node>) {\r\n  if (isArray(ele)) {\r\n    ele.forEach(e => {\r\n      onmounted(e);\r\n    });\r\n  } else if (\r\n    isNode(ele)\r\n    //   ele instanceof Node\r\n  ) {\r\n    if (has(ele, eventlistenerssymbol)) {\r\n      readdlisteners(ele);\r\n    }\r\n    //全局共享状态\r\n    if (\r\n      has(ele, bindstatesymbol)\r\n      // ele[bindstatesymbol]\r\n    ) {\r\n      get(ele, bindstatesymbol) /*  ele[bindstatesymbol] */\r\n        .forEach((state: ReactiveState<any>) => {\r\n          rewatch(state);\r\n        });\r\n\r\n      if (\r\n        has(ele, innerstatesymbol)\r\n        //   ele[innerstatesymbol]\r\n      ) {\r\n        (get(ele, innerstatesymbol) as ReactiveState<any>[]).forEach(\r\n          (state: ReactiveState<any>) => {\r\n            rewatch(state);\r\n          }\r\n        );\r\n      }\r\n      // readdlisteners(ele);\r\n    }\r\n    onmounted(getdomchildren(ele));\r\n  }\r\n\r\n  //\r\n}\r\nexport function onunmounted(ele: Element | Node | Array<Node>) {\r\n  if (isArray(ele)) {\r\n    ele.forEach(e => {\r\n      onunmounted(e);\r\n    });\r\n  } else if (\r\n    isNode(ele)\r\n    //   ele instanceof Node\r\n  ) {\r\n    if (\r\n      has(ele, eventlistenerssymbol)\r\n      // ele[eventlistenerssymbol]\r\n    ) {\r\n      removelisteners(ele);\r\n    }\r\n    /*   if (ele[bindstatesymbol]) {\r\n      ele[bindstatesymbol].forEach((state: ReactiveState) => {\r\n        unwatch(state);\r\n      });\r\n */\r\n    // readdlisteners(ele);\r\n    // }\r\n    //\r\n    /* 组件卸载时unwatch组件内部的 ReactiveState*/\r\n    if (\r\n      has(ele, innerstatesymbol)\r\n      // ele[innerstatesymbol]\r\n    ) {\r\n      (get(ele, innerstatesymbol) as ReactiveState<any>[]).forEach(\r\n        (state: ReactiveState<any>) => {\r\n          unwatch(state);\r\n        }\r\n      );\r\n    }\r\n    onunmounted(getdomchildren(ele));\r\n  }\r\n}\r\n","export type VaildVDom =\r\n  | Virtualdom<any>\r\n  | string\r\n  | number\r\n  | Array<Virtualdom<any> | string | number | ReactiveState<any>>\r\n  | ReactiveState<any>;\r\nimport createeleattr from \"@masx200/dom-element-attribute-agent-proxy\";\r\nimport { AttrChange } from \"./attrchange\";\r\nimport createApp, { invalid_Virtualdom } from \"./createApp\";\r\nimport createElement from \"./createelement\";\r\nimport { setelehtml } from \"./dom\";\r\n// const readysymbol = Symbol(\"ready\");\r\nimport { onmounted, onunmounted } from \"./elementonmountandunmount\";\r\nimport { isvalidvdom } from \"./html\";\r\nimport { componentsymbol } from \"./iscomponent\";\r\nimport ReactiveState, { isReactiveState } from \"./reactivestate\";\r\nimport { readysymbol } from \"./readysymbol\";\r\nimport { get } from \"./reflect\";\r\nimport render from \"./rendervdomtoreal\";\r\n// import mount from \"./mount\";\r\nimport { isboolean, isundefined } from \"./util\";\r\n// import createElement from \"./createelement\";\r\nimport Virtualdom from \"./virtualdom\";\r\n// import { readysymbol } from \"./createComponent\";\r\nexport const invalid_ReactiveState = \"invalid ReactiveState\";\r\nconst truevdomsymbol = Symbol(\"truevdom\");\r\nconst falsevdomsymbol = Symbol(\"falsevdom\");\r\nconst trueelesymbol = Symbol(\"trueele\");\r\nconst falseelesymbol = Symbol(\"falseele\");\r\nconst handletrue = Symbol(\"handletrue\");\r\nconst handlefalse = Symbol(\"handlefalse\");\r\n\r\nexport default function(\r\n  conditon: ReactiveState<any> | boolean,\r\n  iftrue?: VaildVDom,\r\n  iffalse?: VaildVDom\r\n): Virtualdom<any> {\r\n  if (!(isReactiveState(conditon) || isboolean(conditon))) {\r\n    console.error(conditon);\r\n    console.error(invalid_ReactiveState);\r\n    throw TypeError();\r\n  }\r\n  [iftrue, iffalse].forEach(a => {\r\n    if (!(isundefined(a) || isvalidvdom(a))) {\r\n      console.error(a);\r\n      console.error(invalid_Virtualdom);\r\n      throw new TypeError();\r\n    }\r\n  });\r\n  const options = { true: iftrue, false: iffalse };\r\n  class Condition extends AttrChange {\r\n    static [componentsymbol] = true;\r\n    [readysymbol] = false;\r\n    constructor(/* propsjson?: object, children?: any[], options: object = {} */) {\r\n      super();\r\n      // if(){}\r\n      const optionstrue = get(options, \"true\");\r\n      const optionsfalse = get(options, \"false\");\r\n      this[truevdomsymbol] =\r\n        /*isarray(optionstrue)\r\n        ? optionstrue.filter(Boolean)\r\n        : */\r\n        [optionstrue].flat(1 / 0).filter(Boolean);\r\n      this[falsevdomsymbol] =\r\n        /* isarray(optionsfalse)\r\n        ? optionsfalse.filter(Boolean)\r\n        : */\r\n\r\n        [optionsfalse].flat(1 / 0).filter(Boolean);\r\n      // optionsfalse;\r\n    }\r\n    [falseelesymbol]: any[];\r\n    [trueelesymbol]: any[];\r\n    [truevdomsymbol]: any[];\r\n    [falsevdomsymbol]: any[];\r\n    //   [readysymbol] = false;\r\n    [handlefalse]() {\r\n      setelehtml(this, \"\");\r\n      if (this[falsevdomsymbol]) {\r\n        if (!this[falseelesymbol]) {\r\n          // } else {\r\n          this[falseelesymbol] = render(this[falsevdomsymbol]);\r\n          // this[falsevdomsymbol].map(e => render(e));\r\n        }\r\n        //   mount(this[falseelesymbol], this);\r\n        const elementtomount = this[falseelesymbol];\r\n        createApp(elementtomount, this);\r\n        elementtomount.forEach(e => onmounted(e));\r\n        if (this[trueelesymbol]) {\r\n          this[trueelesymbol].forEach(e => onunmounted(e));\r\n        }\r\n      }\r\n    }\r\n    [handletrue]() {\r\n      setelehtml(this, \"\");\r\n      if (this[truevdomsymbol]) {\r\n        if (!this[trueelesymbol]) {\r\n          this[trueelesymbol] = render(this[truevdomsymbol]);\r\n          // this[truevdomsymbol].map(e => render(e));\r\n        }\r\n        //\r\n        //   mount(this[trueelesymbol], this);\r\n        const elementtomount = this[trueelesymbol];\r\n        createApp(elementtomount, this);\r\n        elementtomount.forEach(e => onmounted(e));\r\n        if (this[falseelesymbol]) {\r\n          this[falseelesymbol].forEach(e => onunmounted(e));\r\n        }\r\n      }\r\n    }\r\n    connectedCallback() {\r\n      if (!this[readysymbol]) {\r\n        // createApp(this[elementsymbol], this);\r\n        this[readysymbol] = true;\r\n\r\n        const attrs: { [key: string]: any } = createeleattr(this);\r\n        // console.log(attrs);\r\n        if (true === attrs[\"value\"]) {\r\n          get(this, handletrue).call(this);\r\n        }\r\n        if (false === attrs[\"value\"]) {\r\n          get(this, handlefalse).call(this);\r\n          //\r\n        }\r\n      }\r\n      onmounted(this);\r\n      //\r\n    }\r\n    disconnectedCallback() {\r\n      onunmounted(this);\r\n    }\r\n\r\n    attributeChangedCallback(\r\n      name: string /* , oldValue: any, newValue: any */\r\n    ) {\r\n      if (this[readysymbol]) {\r\n        // console.log(name, oldValue, newValue);\r\n        if (name === \"value\") {\r\n          const attrs: { [key: string]: any } = createeleattr(this);\r\n          //   console.log(attrs);\r\n          if (true === attrs[\"value\"]) {\r\n            this[handletrue]();\r\n            //\r\n          }\r\n          if (false === attrs[\"value\"]) {\r\n            this[handlefalse]();\r\n            //\r\n          }\r\n        }\r\n\r\n        //\r\n      }\r\n    }\r\n  }\r\n  /* vdom.options = { true: iftrue, false: iffalse }; */\r\n  const vdom = createElement(Condition, { value: conditon });\r\n  return vdom;\r\n  /*  */\r\n}\r\n","/* export interface CallbackReactiveState<T extends string | number | boolean | undefined | object|bigint > {\r\n  \r\n (...ReactiveState<T>[])=>any\r\n} */\r\ninterface CallbackReactiveState2<\r\n  T extends string | number | boolean | undefined | object | bigint\r\n> {\r\n  (...args: T[]): any;\r\n}\r\nimport { invalid_ReactiveState } from \"./conditon\";\r\nimport { invalid_Function, usestste } from \"./context-mounted-unmounted-\";\r\nimport ReactiveState, {\r\n  dispatchsymbol,\r\n  isReactiveState\r\n} from \"./reactivestate\";\r\nimport readonlyproxy from \"./readonlyproxy\";\r\nimport {\r\n  defineProperty,\r\n  //   deleteProperty,\r\n  get,\r\n  //   getOwnPropertyDescriptor,\r\n  has,\r\n  ownKeys,\r\n  apply\r\n  //   getPrototypeOf\r\n  //   set\r\n} from \"./reflect\";\r\nimport { toArray } from \"./toArray\";\r\nimport { isArray, isFunction, isobject } from \"./util\";\r\nimport { watch } from \"./watch\";\r\n\r\n//const { defineProperty } = Object;\r\nexport default function<\r\n  T extends string | number | boolean | undefined | object | bigint\r\n>(\r\n  state: ReactiveState<T> | Array<ReactiveState<T>>,\r\n  callback: CallbackReactiveState2<T>\r\n): ReactiveState<any> {\r\n  if (\r\n    !(\r\n      (isArray(state) || isReactiveState(state)) &&\r\n      // state instanceof ReactiveState\r\n      isFunction(callback)\r\n    )\r\n  ) {\r\n    console.error(state);\r\n    console.error(callback);\r\n    console.error(invalid_ReactiveState + invalid_Function);\r\n\r\n    throw TypeError();\r\n  }\r\n  const state1array: ReactiveState<T>[] =\r\n    //   if (isReactiveState(state)) {\r\n    toArray(state);\r\n  /*  state1 = Arraycomputed(\r\n      toArray(state),\r\n\r\n      callback\r\n    ); */\r\n  //   } else if (isArray(state)) {\r\n  //     state1array = state;\r\n  //     // state1 = Arraycomputed(state, callback);\r\n  //   } else {\r\n  //     state1array = Array.from(state);\r\n  //   }\r\n  const state1 = Arraycomputed(state1array, callback);\r\n  usestste(state1);\r\n  return state1;\r\n}\r\n\r\nfunction Arraycomputed<\r\n  T extends string | number | boolean | undefined | object | bigint\r\n>(\r\n  state: ReactiveState<T>[],\r\n  callback: CallbackReactiveState2<T>\r\n): ReactiveState<any> {\r\n  const reactivestate = new ReactiveState();\r\n  const getter = () => {\r\n    const value = apply(callback, undefined, state.map(st => st.valueOf()));\r\n    // callback(...state.map(st => st.valueOf()));\r\n    return isReactiveState(value) ? value.value : value;\r\n  };\r\n\r\n  let memorized = getter();\r\n\r\n  if (isFunction(memorized)) {\r\n    console.error(memorized);\r\n    throw new TypeError();\r\n  }\r\n  defineProperty(reactivestate, \"value\", {\r\n    get: getter,\r\n    configurable: true\r\n  });\r\n\r\n  state.forEach(state => {\r\n    watch(state, () => {\r\n      let newvalue = getter();\r\n      if (newvalue !== memorized) {\r\n        reactivestate[dispatchsymbol]();\r\n\r\n        memorized = newvalue;\r\n      }\r\n      //\r\n    });\r\n  });\r\n\r\n  return getproperyreadproxy(readonlyproxy(reactivestate));\r\n}\r\nconst __proto__ = \"__proto__\";\r\nexport function getproperyreadproxy<T extends object>(a: T): T;\r\nexport function getproperyreadproxy(a: object) {\r\n  /* 把基本类型原型的属性 也加上*/\r\n  //   const target = isobject(a) ? a : getPrototypeOf(a);\r\n  const target = a;\r\n  return new Proxy(target, {\r\n    ownKeys(target) {\r\n      let myvalue = get(target, \"value\");\r\n      const myvalueobj = isobject(myvalue) ? myvalue : myvalue[__proto__];\r\n      //   return ownKeys(target);\r\n      return Array.from(new Set([...ownKeys(target), ...ownKeys(myvalueobj)]));\r\n\r\n      /* Array.from(\r\n        new Set([...ownKeys(target), ...ownKeys(get(target, \"value\"))])\r\n      ); */\r\n    },\r\n    has(target, key) {\r\n      const myvalue = get(target, \"value\");\r\n      const myvalueobj = isobject(myvalue) ? myvalue : myvalue[__proto__];\r\n      return has(target, key) || has(myvalueobj, key);\r\n    },\r\n    get(target, key) {\r\n      if (has(target, key)) {\r\n        return get(target, key);\r\n      } else {\r\n        const myvalue = get(target, \"value\");\r\n        const myvalueobj = isobject(myvalue) ? myvalue : Object(myvalue);\r\n\r\n        if (has(myvalueobj, key)) {\r\n          return get(myvalueobj, key);\r\n        }\r\n      }\r\n      //   return get(target, key);\r\n      /*  const myvalue = get(target, \"value\");\r\n\r\n      if (has(target, key)) {\r\n        return get(target, key);\r\n      } else if (has(myvalue, key)) {\r\n        return get(myvalue, key);\r\n      } */\r\n    }\r\n  });\r\n}\r\n","interface Ref<T> {\r\n  value: T;\r\n}\r\n\r\nexport default function createRef<T>(value: T): Ref<T> {\r\n  return { value };\r\n}\r\n","import { invalid_Function } from \"./context-mounted-unmounted-\";\r\nimport directives from \"./directives\";\r\nimport Virtualdom from \"./virtualdom\";\r\nimport ReactiveState from \"./reactivestate\";\r\nexport interface Extendfun {\r\n  (\r\n    element: Element,\r\n    value: any | ReactiveState<any>,\r\n    vdom: Virtualdom<any>\r\n  ): void;\r\n}\r\nexport interface ExtendOptions {\r\n  [s: string]: Extendfun;\r\n}\r\nexport default function extenddirectives(options: ExtendOptions = {}) {\r\n  Object.entries(options).forEach(([key, value]) => {\r\n    if (typeof value !== \"function\") {\r\n      console.error(value);\r\n      console.error(invalid_Function);\r\n      throw TypeError();\r\n    } else {\r\n      if (!directives[key]) {\r\n        Reflect.set(directives, key, value);\r\n      } else {\r\n        console.error(directives);\r\n        console.error(\"do not extend existing directive\");\r\n        throw new Error();\r\n      }\r\n    }\r\n  });\r\n  return directives;\r\n}\r\n","import { invalid_ReactiveState } from \"./conditon\";\r\nimport { invalid_Virtualdom } from \"./createApp\";\r\nimport directives from \"./extend-directive\";\r\nimport ReactiveState, {\r\n  // ReactiveState,\r\n  isReactiveState\r\n} from \"./reactivestate\";\r\nimport { set } from \"./reflect\";\r\nimport { toArray } from \"./toArray\";\r\nimport Virtualdom from \"./virtualdom\";\r\ndirectives({\r\n  value(_element: Element, value: ReactiveState<any>, vdom: Virtualdom<any>) {\r\n    console.log(vdom);\r\n    if (\r\n      isReactiveState(value) &&\r\n      //   value instanceof ReactiveState\r\n\r\n      (vdom.type === \"input\" || vdom.type === \"textarea\")\r\n    ) {\r\n      vdom.bindattr[\"value\"] = value;\r\n      [\"change\", \"input\"].forEach(eventname => {\r\n        const origin = vdom.onevent[eventname];\r\n\r\n        const eventsarray = toArray(origin);\r\n\r\n        set(\r\n          vdom.onevent,\r\n          eventname,\r\n          [\r\n            ...eventsarray,\r\n\r\n            (e: any) => {\r\n              return (value.value = e.target.value);\r\n            }\r\n          ].filter(Boolean)\r\n        );\r\n      });\r\n    } else {\r\n      console.error(value);\r\n      console.error(vdom);\r\n      console.error(invalid_ReactiveState + invalid_Virtualdom);\r\n      throw TypeError();\r\n    }\r\n  }\r\n});\r\ndirectives({\r\n  checked(_element: Element, value: ReactiveState<any>, vdom: Virtualdom<any>) {\r\n    console.log(vdom);\r\n    if (\r\n      isReactiveState(value) &&\r\n      //   value instanceof ReactiveState\r\n\r\n      vdom.type === \"input\"\r\n    ) {\r\n      vdom.bindattr[\"checked\"] = value;\r\n      [\"change\", \"input\"].forEach(eventname => {\r\n        const origin = vdom.onevent[eventname];\r\n\r\n        const eventsarray = toArray(origin);\r\n\r\n        set(\r\n          vdom.onevent,\r\n          eventname,\r\n          [\r\n            ...eventsarray,\r\n\r\n            (e: any) => {\r\n              return (value.value = e.target.checked);\r\n            }\r\n          ].filter(Boolean)\r\n        );\r\n      });\r\n    } else {\r\n      console.error(value);\r\n      console.error(vdom);\r\n      console.error(invalid_ReactiveState + invalid_Virtualdom);\r\n      throw TypeError();\r\n      //throw TypeError(invalid_ReactiveState + invalid_Virtualdom);\r\n    }\r\n  }\r\n});\r\n"],"names":["a","isString","isnumber","isboolean","isundefined","Reflect","window","apply","construct","defineProperty","deleteProperty","get","getOwnPropertyDescriptor","getPrototypeOf","has","ownKeys","set","isplainobject","isobject","gettagtype","isstring","isfunction","isarray","Array","isArray","toString","call","replace","toLowerCase","trim","isSet","Set","HTMLElement","customElements","Proxy","console","error","TypeError","hyphenateRE","hyphenate","str","String","valuestring","isinputcheckbox","ele","geteletagname","objtostylestring","obj","JSON","parse","stringify","Object","fromEntries","entries","map","key","value","join","asserthtmlelement","Element","createeleattragentreadwrite","temp","create","outputattrs","[object Object]","isinputtextortextareaflag","isinputtextortextarea","keys","attributesownkeys","from","undefined","flat","Infinity","filter","target","v","getattribute","t","csstext","classtext","setattribute","k","removeAttribute","includes","otherdescipter","enumerable","configurable","writable","myvalue","getAttributeNames","getAttribute","tagName","setAttribute","tagname","document","seteletext","e","textContent","setelehtml","innerHTML","appendchild","container","appendChild","createsvgelement","createElementNS","svgnamespace","createDocumentFragment","createnativeelement","type","createElement","namespace","name","createtextnode","data","createTextNode","changetext","textnode","nodeValue","mathnamespace","createmathelement","domaddlisten","event","addEventListener","domremovelisten","removeEventListener","getdomchildren","childNodes","HTMLElementprototype","prototype","createanotherhtmldocument","implementation","createHTMLDocument","attributeChangedCallback","AttrChange","super","innerText","qualifiedName","callback","this","oldValue","isFunction","n","r","u","p","length","s","h","assign","push","f","Map","arguments","merge_entries","m","forEach","add","invalid_primitive_or_object_state","isReactiveState","ReactiveState","eventtargetsymbol","Symbol","memlisteners","dispatchsymbol","subscribesymbol","removeallistenerssymbol","addallistenerssymbol","init","EventTarget","isprimitive","valueOf","eventname","dispatchEvent","CustomEvent","detail","toPrimitive","toStringTag","isVirtualdom","Virtualdom","props","children","字母大小写","propsentries","propsentriesNOTevents","startsWith","字母开头的entries","test","bindattr","onevent","slice","directives","propsorchildren","typenormalized","propsnormalized","childrennormalized","html","inargs","htm","isvalidvdom","flag","every","assertvalidvirtualdom","args","vdom","invalid_Virtualdom","toArray","clear","eles","invalid_custom_element_class","使用value从表中查询key","表","组件状态名","outputentrie","find","CustomElementRegistry","elementset","for","elementmap","initclass","extendsname","RandomDefineCustomElement","isclassextendsHTMLElement","elementname","getrandomstringandnumber","define","extends","constructor","options","iterator","charactorlist","fill","i","fromCharCode","hexnumberlist","charactorandnumberlist","getrandomcharactor","Math","floor","random","getrandomhexnumberandcharactor","createcostumelemet","propsjson","isconnected","element","documentElement","getancestornode","node","parentNode","invalid_Function","errormessage","ctxopen","MountedSet","UnMountedSet","StateSet","getstates","usestste","state","getMounted","getUnMounted","useMounted","fun","Error","useUnMounted","clearMounted","clearstate","clearUnMounted","openctx","clearall","closectx","watch","state1","watchsingle","invalid_ReactiveState","requestAnimationFrame","rewatch","unwatch","directive","ref","_vdom","log","createhtmlandtextdirective","text","errorname","componentsymbol","eventlistenerssymbol","firstaddlisteners","callarray","removelisteners","readdlisteners","bindstatesymbol","virtualdomsymbol","throwinvalideletype","render","reactive","fragmentnode","mount","handleprops","attribute1","createeleattr","primitivestate","callbacks","values","MountElement","el","body","head","elesarray","isNode","isNodeArray","array","Node","setPrototypeOf","deepobserveaddpath","patharray","ancestor","fakeobj","argumentslist","thisarg","argarray","descripter","observedeepagent","initobj","containReactiveState","some","state_entries","objproxyhandler","deepobserve","_target_","set_prototype","returnvalue","dele","size","createstate","getproperyreadproxy","handleobjectstate","createcssBlob","source","URL","createObjectURL","Blob","isCSSMediaRule","isCSSImportRule","parsecsstext","styleelement","otherdocument","isCSSStyleRule","selectoraddprefix","cssstylerule","prefix","selectorText","selectorarray","split","prefixselector","prefixcssrules","cssRulesarray","cssrule","cssRules","savestyleblob","href","Boolean","componentsstylesheet","urltext","cssrulestocsstext","cssrules","c","cssText","createlinkstylesheet","url","rel","transformcsstext","css","cssomold","cssomnew","cssnewtext","registercssprefix","loadlinkstyle","stylelinkelement","Promise","rs","loaderrorfun","onload","onerror","waitloadallstyle","_this","all","styleurl","readysymbol","setimmediate","resolve","then","innerstatesymbol","attributessymbol","elementsymbol","vdomsymbol","mountedsymbol","unmountedsymbol","createComponent","custfun","defaultProps","Component","attrs","thisattributess","readonlyproxy","readonlyprop","possiblyvirtualdom","thisvdomsymbol","onmounted","onunmounted","_d","truevdomsymbol","falsevdomsymbol","trueelesymbol","falseelesymbol","handletrue","handlefalse","conditon","iftrue","iffalse","true","false","Condition","optionstrue","optionsfalse","elementtomount","createApp","state1array","Arraycomputed","reactivestate","getter","st","memorized","newvalue","__proto__","myvalueobj","createRef","extenddirectives","_element","origin","eventsarray","checked"],"mappings":"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"}