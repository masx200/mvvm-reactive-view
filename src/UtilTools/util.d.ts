export declare function issymbol(a: any): a is symbol;
export { isplainobject };
export { isfunction as isFunction, isarray as isArray, isstring as isString };
export { isprimitive };
declare const isplainobject: (a: any) => a is Record<any, any>;
import isprimitive from "./isprimitive";
export declare function isundefined(a: any): a is void;
export declare function isnumber(a: any): a is number;
export declare function isboolean(a: any): a is boolean;
export declare function isobject(a: any): a is Exclude<object, Function>;
export declare function isstring(a: any): a is string;
export declare function isfunction(a: any): a is Function;
export declare function isarray(a: any): a is Array<any>;
export declare function gettagtype(a: any): string;
export declare function isSet(a: any): a is Set<any>;
export declare function isMap(a: any): a is Map<any, any>;
export declare const camelize: (str: string) => string;
export declare const hyphenate: (str: string) => string;
export declare function isWeakMap(a: any): a is WeakMap<any, any>;
//# sourceMappingURL=util.d.ts.map
